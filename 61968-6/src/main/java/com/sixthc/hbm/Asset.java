package com.sixthc.hbm;

// Generated Jun 3, 2015 2:34:41 PM by Hibernate Tools 3.2.2.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.apache.log4j.Logger;

/**
 * Asset generated by hbm2java
 */
@Entity
@Table(name = "asset")
public class Asset implements java.io.Serializable {
	private static Constraint con = new Constraint(Asset.class);
	private static org.apache.log4j.Logger log = Logger.getLogger(Asset.class);

	private Integer id;
	private String mrid;
	private int criticalFlag;
	private String utcNumber;
	private Address address;
	private String internalBuildingName;
	private String internalBuildingNumber;
	private String internalFloor;
	private String internalRoomNumber;
	private String amrSystem;
	private String formNumber;
	private String serialNumber;
	private Set<WorkTask> workTasks = new HashSet<WorkTask>(0);
	private Set<AssetProcedures> assetProcedureses = new HashSet<AssetProcedures>(
			0);
	private Set<AssetNames> assetNameses = new HashSet<AssetNames>(0);
	private Set<WorkTaskAssets> workTaskAssetses = new HashSet<WorkTaskAssets>(
			0);
	private Set<WorkTaskOldAssets> workTaskOldAssetses = new HashSet<WorkTaskOldAssets>(
			0);
	private Set<CrewAssets> workCrewAssets = new HashSet<CrewAssets>(0);
	private Set<MeterMultiplier> meterMultipliers = new HashSet<MeterMultiplier>(
			0);
    private Set<MeterReadingSeq> meterReadingSeqs = new HashSet<MeterReadingSeq>(0);

	public Asset() {
	}

	public Asset(String mrid, int criticalFlag) {
		this.mrid = mrid;
		this.criticalFlag = criticalFlag;
	}

	public Asset(String mrid, int criticalFlag, String utcNumber,
			Address address, Set<WorkTask> workTasks,
			Set<AssetProcedures> assetProcedureses,
			Set<AssetNames> assetNameses, Set<WorkTaskAssets> workTaskAssetses) {
		this.mrid = mrid;
		this.criticalFlag = criticalFlag;
		this.utcNumber = utcNumber;
		this.address = address;
		this.workTasks = workTasks;
		this.assetProcedureses = assetProcedureses;
		this.assetNameses = assetNameses;
		this.workTaskAssetses = workTaskAssetses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "mRID", nullable = false, length = 40)
	public String getMrid() {
		return this.mrid;
	}

	public void setMrid(String mrid) {
		con.check("setMrid", mrid, false, 40);
		this.mrid = mrid;
	}

	@Column(name = "critical_flag", nullable = false)
	public int getCriticalFlag() {
		return this.criticalFlag;
	}

	public void setCriticalFlag(int criticalFlag) {
		log.debug("setCriticalFlag : " + criticalFlag);
		this.criticalFlag = criticalFlag;
	}

	@Column(name = "utc_number", length = 40)
	public String getUtcNumber() {
		return this.utcNumber;
	}

	public void setUtcNumber(String utcNumber) {
		con.check("setUTCNumber", utcNumber, true, 40);
		this.utcNumber = utcNumber;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@Column(name = "internal_building_name", length = 512)
	public String getInternalBuildingName() {
		return internalBuildingName;
	}

	public void setInternalBuildingName(String internalBuildingName) {
		this.internalBuildingName = internalBuildingName;
	}

	@Column(name = "internal_building_number", length = 512)
	public String getInternalBuildingNumber() {
		return internalBuildingNumber;
	}

	public void setInternalBuildingNumber(String internalBuildingNumber) {
		this.internalBuildingNumber = internalBuildingNumber;
	}

	@Column(name = "internal_floor", length = 512)
	public String getInternalFloor() {
		return internalFloor;
	}

	public void setInternalFloor(String internalFloor) {
		this.internalFloor = internalFloor;
	}

	@Column(name = "internal_room_number", length = 512)
	public String getInternalRoomNumber() {
		return internalRoomNumber;
	}

	public void setInternalRoomNumber(String internalRoomNumber) {
		this.internalRoomNumber = internalRoomNumber;
	}

	@Column(name = "amr_system", length = 512)
	public String getAmrSystem() {
		return this.amrSystem;
	}

	public void setAmrSystem(String amrSystem) {
		this.amrSystem = amrSystem;
	}

	@Column(name = "form_number", length = 512)
	public String getFormNumber() {
		return this.formNumber;
	}

	public void setFormNumber(String formNumber) {
		this.formNumber = formNumber;
	}

	@Column(name = "serial_number", length = 512)
	public String getSerialNumber() {
		return this.serialNumber;
	}

	public void setSerialNumber(String serialNumber) {
		this.serialNumber = serialNumber;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "address_id")
	public Address getAddress() {
		return address;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asset")
	public Set<WorkTask> getWorkTasks() {
		return this.workTasks;
	}

	public void setWorkTasks(Set<WorkTask> workTasks) {
		this.workTasks = workTasks;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asset")
	public Set<AssetProcedures> getAssetProcedureses() {
		return this.assetProcedureses;
	}

	public void setAssetProcedureses(Set<AssetProcedures> assetProcedureses) {
		this.assetProcedureses = assetProcedureses;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asset")
	public Set<AssetNames> getAssetNameses() {
		return this.assetNameses;
	}

	public void setAssetNameses(Set<AssetNames> assetNameses) {
		this.assetNameses = assetNameses;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asset")
	public Set<WorkTaskAssets> getWorkTaskAssetses() {
		return this.workTaskAssetses;
	}

	public void setWorkTaskAssetses(Set<WorkTaskAssets> workTaskAssetses) {
		this.workTaskAssetses = workTaskAssetses;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asset")
	public Set<WorkTaskOldAssets> getWorkTaskOldAssetses() {
		return this.workTaskOldAssetses;
	}

	public void setWorkTaskOldAssetses(
			Set<WorkTaskOldAssets> workTaskOldAssetses) {
		this.workTaskOldAssetses = workTaskOldAssetses;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asset")
	public Set<CrewAssets> getWorkCrewAssets() {
		return workCrewAssets;
	}

	public void setWorkCrewAssets(Set<CrewAssets> workCrewAssets) {
		this.workCrewAssets = workCrewAssets;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asset")
	public Set<MeterMultiplier> getMeterMultipliers() {
		return meterMultipliers;
	}

	public void setMeterMultipliers(Set<MeterMultiplier> meterMultipliers) {
		this.meterMultipliers = meterMultipliers;
	}
	
	@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="asset")
    public Set<MeterReadingSeq> getMeterReadingSeqs() {
        return this.meterReadingSeqs;
    }
    
    public void setMeterReadingSeqs(Set<MeterReadingSeq> meterReadingSeqs) {
        this.meterReadingSeqs = meterReadingSeqs;
    }

}
