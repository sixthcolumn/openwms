package com.sixthc.hbm;
// Generated Aug 6, 2016 3:05:23 PM by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Maintorder generated by hbm2java
 */
@Entity
@Table(name="maintorder"
)
public class Maintorder  implements java.io.Serializable {


     private Integer id;
     private String mrid;
     private Date createdAt;
     private String createdBy;
     private String status;
     private String orderType;
     private Set<ReadingType> readingTypes = new HashSet<ReadingType>(0);
     private Set<WorkOrder> workOrders = new HashSet<WorkOrder>(0);
     private Set<ReadingQualityType> readingQualityTypes = new HashSet<ReadingQualityType>(0);
     private Set<MaintorderNames> maintorderNameses = new HashSet<MaintorderNames>(0);

    public Maintorder() {
    }

	
    public Maintorder(Date createdAt, String createdBy) {
        this.createdAt = createdAt;
        this.createdBy = createdBy;
    }
    public Maintorder(String mrid, Date createdAt, String createdBy, String status, String orderType, Set<ReadingType> readingTypes, Set<WorkOrder> workOrders, Set<ReadingQualityType> readingQualityTypes, Set<MaintorderNames> maintorderNameses) {
       this.mrid = mrid;
       this.createdAt = createdAt;
       this.createdBy = createdBy;
       this.status = status;
       this.orderType = orderType;
       this.readingTypes = readingTypes;
       this.workOrders = workOrders;
       this.readingQualityTypes = readingQualityTypes;
       this.maintorderNameses = maintorderNameses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    
    @Column(name="mRID", length=512)
    public String getMrid() {
        return this.mrid;
    }
    
    public void setMrid(String mrid) {
        this.mrid = mrid;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", nullable=false, length=19)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }
    
    @Column(name="created_by", nullable=false, length=512)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }
    
    @Column(name="status", length=20)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
    
    @Column(name="order_type", length=20)
    public String getOrderType() {
        return this.orderType;
    }
    
    public void setOrderType(String orderType) {
        this.orderType = orderType;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="maintorder")
    public Set<ReadingType> getReadingTypes() {
        return this.readingTypes;
    }
    
    public void setReadingTypes(Set<ReadingType> readingTypes) {
        this.readingTypes = readingTypes;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="maintorder")
    public Set<WorkOrder> getWorkOrders() {
        return this.workOrders;
    }
    
    public void setWorkOrders(Set<WorkOrder> workOrders) {
        this.workOrders = workOrders;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="maintorder")
    public Set<ReadingQualityType> getReadingQualityTypes() {
        return this.readingQualityTypes;
    }
    
    public void setReadingQualityTypes(Set<ReadingQualityType> readingQualityTypes) {
        this.readingQualityTypes = readingQualityTypes;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="maintorder")
    public Set<MaintorderNames> getMaintorderNameses() {
        return this.maintorderNameses;
    }
    
    public void setMaintorderNameses(Set<MaintorderNames> maintorderNameses) {
        this.maintorderNameses = maintorderNameses;
    }




}


