package org.multispeak.version_4_1_release;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2015-05-09T09:21:19.323-04:00
 * Generated source version: 2.4.1
 * 
 */
@WebService(targetNamespace = "http://www.multispeak.org/Version_4.1_Release", name = "CB_ServerSoap")
@XmlSeeAlso({org.multispeak.version_4.ObjectFactory.class, _1_release.cpsm_v4.ObjectFactory.class, _1_release.gml_v4.ObjectFactory.class, org.w3._1999.xlink.ObjectFactory.class})
public interface CBServerSoap {

    /**
     * Returns the requested Service Location(s) data given the Load Group.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetServiceLocationByLoadGroupResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByLoadGroup", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByLoadGroup")
    @WebMethod(operationName = "GetServiceLocationByLoadGroup", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByLoadGroup")
    @ResponseWrapper(localName = "GetServiceLocationByLoadGroupResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByLoadGroupResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByLoadGroup(
        @WebParam(name = "loadGroup", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String loadGroup,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns a specific project that has been established by CB. The project is referred to by using an objectRef; the name is the human-readable objectName for the project instance, the noun (if used) is 'project', the objectID is the objectID for this project instance.  If the system of record can resolve the name then the noun and objectID are not required, but the default condition is that the noun and objectID are required in order to uniquely resolve the project. 
     */
    @WebResult(name = "GetProjectResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetProject", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetProject")
    @WebMethod(operationName = "GetProject", action = "http://www.multispeak.org/Version_4.1_Release/GetProject")
    @ResponseWrapper(localName = "GetProjectResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetProjectResponse")
    public org.multispeak.version_4.Project getProject(
        @WebParam(name = "projectID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ObjectRef projectID
    );

    /**
     * Returns the requested meters corresponding to a given location in the engineering connectivity model, as specified by the eaLoc.name.
     */
    @WebResult(name = "GetMetersByEALocationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMetersByEALocation", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByEALocation")
    @WebMethod(operationName = "GetMetersByEALocation", action = "http://www.multispeak.org/Version_4.1_Release/GetMetersByEALocation")
    @ResponseWrapper(localName = "GetMetersByEALocationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByEALocationResponse")
    public org.multispeak.version_4.Meters getMetersByEALocation(
        @WebParam(name = "eaLoc", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String eaLoc
    );

    /**
     * The Requester requests from the server a list of names of in home display groups for a specific inHomeDisplay.  The server returns an array of strings including the names of the supported inHomeDisplayGroups.  The Requester can then request the members of a specific group using the GetIHDGroupMembers method. 
     */
    @WebResult(name = "GetIHDGroupNamesByInHomeDisplayIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetIHDGroupNamesByInHomeDisplayID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetIHDGroupNamesByInHomeDisplayID")
    @WebMethod(operationName = "GetIHDGroupNamesByInHomeDisplayID", action = "http://www.multispeak.org/Version_4.1_Release/GetIHDGroupNamesByInHomeDisplayID")
    @ResponseWrapper(localName = "GetIHDGroupNamesByInHomeDisplayIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetIHDGroupNamesByInHomeDisplayIDResponse")
    public org.multispeak.version_4.ArrayOfString18 getIHDGroupNamesByInHomeDisplayID(
        @WebParam(name = "inHomeDisplayID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String inHomeDisplayID
    );

    /**
     * Returns the service order that are associated with a specific service order, specified by its serviceOrderID.
     */
    @WebResult(name = "GetServiceOrderByServiceOrderIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceOrderByServiceOrderID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceOrderByServiceOrderID")
    @WebMethod(operationName = "GetServiceOrderByServiceOrderID", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceOrderByServiceOrderID")
    @ResponseWrapper(localName = "GetServiceOrderByServiceOrderIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceOrderByServiceOrderIDResponse")
    public org.multispeak.version_4.ArrayOfServiceOrder1 getServiceOrderByServiceOrderID(
        @WebParam(name = "serviceLocationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String serviceLocationID
    );

    /**
     * Publisher notifies CB that meter(s) have been installed. CB returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "MeterInstalledNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "MeterInstalledNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterInstalledNotification")
    @WebMethod(operationName = "MeterInstalledNotification", action = "http://www.multispeak.org/Version_4.1_Release/MeterInstalledNotification")
    @ResponseWrapper(localName = "MeterInstalledNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterInstalledNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject meterInstalledNotification(
        @WebParam(name = "addedMeters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.Meters addedMeters
    );

    /**
     * Requester requests list of methods to which this server can publish information.
     */
    @WebResult(name = "GetPublishMethodsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetPublishMethods", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPublishMethods")
    @WebMethod(operationName = "GetPublishMethods", action = "http://www.multispeak.org/Version_4.1_Release/GetPublishMethods")
    @ResponseWrapper(localName = "GetPublishMethodsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPublishMethodsResponse")
    public org.multispeak.version_4.ArrayOfString18 getPublishMethods();

    /**
     * Returns all transfromer bank data from the CB that has been modified since the specified sessionID. The calling parameter previousSessionID should carry the session identifier for the last session of data that the client has successfully received.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetModifiedTransformerBanksFromCBResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetModifiedTransformerBanksFromCB", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedTransformerBanksFromCB")
    @WebMethod(operationName = "GetModifiedTransformerBanksFromCB", action = "http://www.multispeak.org/Version_4.1_Release/GetModifiedTransformerBanksFromCB")
    @ResponseWrapper(localName = "GetModifiedTransformerBanksFromCBResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedTransformerBanksFromCBResponse")
    public org.multispeak.version_4.ArrayOfTransformerBank getModifiedTransformerBanksFromCB(
        @WebParam(name = "previousSessionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String previousSessionID,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Publisher notifies the subscriber of work tasks to be scheduled.  Subscriber returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "TaskListNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "TaskListNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.TaskListNotification")
    @WebMethod(operationName = "TaskListNotification", action = "http://www.multispeak.org/Version_4.1_Release/TaskListNotification")
    @ResponseWrapper(localName = "TaskListNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.TaskListNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject taskListNotification(
        @WebParam(name = "tasks", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfWorkTask1 tasks,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID
    );

    /**
     * Returns the service orders that have a specified serviceOrder Status code. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetServiceOrdersByStatusResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceOrdersByStatus", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceOrdersByStatus")
    @WebMethod(operationName = "GetServiceOrdersByStatus", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceOrdersByStatus")
    @ResponseWrapper(localName = "GetServiceOrdersByStatusResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceOrdersByStatusResponse")
    public org.multispeak.version_4.ArrayOfServiceOrder1 getServiceOrdersByStatus(
        @WebParam(name = "status", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.SoStatusCode status,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the requested service location(s) data for services that have services of the given service type.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetServiceLocationByServiceTypeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByServiceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByServiceType")
    @WebMethod(operationName = "GetServiceLocationByServiceType", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByServiceType")
    @ResponseWrapper(localName = "GetServiceLocationByServiceTypeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByServiceTypeResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByServiceType(
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns all connectDisconnectEvents in the specified date range for the specified reasonCode.  See the connectDisconnectCode.reasonCode enumeration for acceptable values.
     */
    @WebResult(name = "GetAllConnectDisconnectEventsByReasonCodeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllConnectDisconnectEventsByReasonCode", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllConnectDisconnectEventsByReasonCode")
    @WebMethod(operationName = "GetAllConnectDisconnectEventsByReasonCode", action = "http://www.multispeak.org/Version_4.1_Release/GetAllConnectDisconnectEventsByReasonCode")
    @ResponseWrapper(localName = "GetAllConnectDisconnectEventsByReasonCodeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllConnectDisconnectEventsByReasonCodeResponse")
    public org.multispeak.version_4.ArrayOfConnectDisconnectEvent getAllConnectDisconnectEventsByReasonCode(
        @WebParam(name = "reasonCode", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String reasonCode,
        @WebParam(name = "startDate", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar endDate
    );

    /**
     * The Requester requests from the CB the members of a specific meter reading group, identified by the meterGroupName parameter.  This method is used, along with the GetMeterGroupNames method to enable the MR to get information about which meters are included in a specific meter reading group.  The CB returns a meterGroups object in response to this method call.  This object can carry meterGroups that only include meters of one service type or a mixed meterGroup that contains meters of mixed service type. 
     */
    @WebResult(name = "GetMeterGroupMembersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMeterGroupMembers", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterGroupMembers")
    @WebMethod(operationName = "GetMeterGroupMembers", action = "http://www.multispeak.org/Version_4.1_Release/GetMeterGroupMembers")
    @ResponseWrapper(localName = "GetMeterGroupMembersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterGroupMembersResponse")
    public org.multispeak.version_4.MeterGroups getMeterGroupMembers(
        @WebParam(name = "meterGroupName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String meterGroupName
    );

    /**
     * Returns transformer bank data from the CB, chosen by bankID (objectID of transformerBank).
     */
    @WebResult(name = "GetTransformerBankByBankIDFromCBResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetTransformerBankByBankIDFromCB", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetTransformerBankByBankIDFromCB")
    @WebMethod(operationName = "GetTransformerBankByBankIDFromCB", action = "http://www.multispeak.org/Version_4.1_Release/GetTransformerBankByBankIDFromCB")
    @ResponseWrapper(localName = "GetTransformerBankByBankIDFromCBResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetTransformerBankByBankIDFromCBResponse")
    public org.multispeak.version_4.TransformerBank getTransformerBankByBankIDFromCB(
        @WebParam(name = "bankID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String bankID
    );

    /**
     * Returns the chargeable devices associated with an account number given a customer's accountNumber.
     */
    @WebResult(name = "GetChargeableDevicesByAccountNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetChargeableDevicesByAccountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetChargeableDevicesByAccountNumber")
    @WebMethod(operationName = "GetChargeableDevicesByAccountNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetChargeableDevicesByAccountNumber")
    @ResponseWrapper(localName = "GetChargeableDevicesByAccountNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetChargeableDevicesByAccountNumberResponse")
    public org.multispeak.version_4.ArrayOfChargeableDevice getChargeableDevicesByAccountNumber(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber
    );

    /**
     * Returns the requested PPMLocation given a customer's accountNumber.
     */
    @WebResult(name = "GetPPMCustomerResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetPPMCustomer", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPPMCustomer")
    @WebMethod(operationName = "GetPPMCustomer", action = "http://www.multispeak.org/Version_4.1_Release/GetPPMCustomer")
    @ResponseWrapper(localName = "GetPPMCustomerResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPPMCustomerResponse")
    public org.multispeak.version_4.PpmLocation getPPMCustomer(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber
    );

    /**
     * The MR requests from the CB a specific meter object, given the account number and serviceType (electric, gas, water, or propane). The CB returns a meters object, which can contain an array of meters by serviceType in response to this method call. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. 
     */
    @WebResult(name = "GetMetersByAccountNumberAndServiceTypeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMetersByAccountNumberAndServiceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByAccountNumberAndServiceType")
    @WebMethod(operationName = "GetMetersByAccountNumberAndServiceType", action = "http://www.multispeak.org/Version_4.1_Release/GetMetersByAccountNumberAndServiceType")
    @ResponseWrapper(localName = "GetMetersByAccountNumberAndServiceTypeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByAccountNumberAndServiceTypeResponse")
    public org.multispeak.version_4.Meters getMetersByAccountNumberAndServiceType(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * MR Notifies CB of a change in meter readings by sending the changed meterReading objects.  CB returns information about failed transactions in an array of errorObjects.The transactionID calling parameter links this Initiate request with the published data method call. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "ReadingChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ReadingChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ReadingChangedNotification")
    @WebMethod(operationName = "ReadingChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/ReadingChangedNotification")
    @ResponseWrapper(localName = "ReadingChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ReadingChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject readingChangedNotification(
        @WebParam(name = "changedMeterReads", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfMeterReading1 changedMeterReads,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID
    );

    /**
     * Returns customer usage data from the CB, chosen by account number.
     */
    @WebResult(name = "GetUsageByAccountNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetUsageByAccountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetUsageByAccountNumber")
    @WebMethod(operationName = "GetUsageByAccountNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetUsageByAccountNumber")
    @ResponseWrapper(localName = "GetUsageByAccountNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetUsageByAccountNumberResponse")
    public org.multispeak.version_4.ArrayOfUsage getUsageByAccountNumber(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * This method permits a client to have changed information on domain members published to it using a previously arranged subscription, set up using the RegisterForServiceMethod. The client should first obtain a registrationID and then register for service, including the DomainMembersChangedNotification as one of the methods in the list of methods to which the client has subscribed.  The server shall include the registrationID for the subscription in the message header so that the client can determine the source of the  domainMember information. 
     */
    @WebResult(name = "DomainMembersChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "DomainMembersChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.DomainMembersChangedNotification")
    @WebMethod(operationName = "DomainMembersChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/DomainMembersChangedNotification")
    @ResponseWrapper(localName = "DomainMembersChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.DomainMembersChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject domainMembersChangedNotification(
        @WebParam(name = "changedDomainMembers", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfDomainMember changedDomainMembers
    );

    /**
     * Publisher has processed payment extension(s) in accordance with the rules established by the CB and previously communicated with the Publisher using the RequestPaymentExtension method, and is sending the extension information to the CB.  CB returns information on failed transactions using an array of errorObjects. 
     */
    @WebResult(name = "ExtendPaymentResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ExtendPayment", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ExtendPayment")
    @WebMethod(operationName = "ExtendPayment", action = "http://www.multispeak.org/Version_4.1_Release/ExtendPayment")
    @ResponseWrapper(localName = "ExtendPaymentResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ExtendPaymentResponse")
    public org.multispeak.version_4.ArrayOfErrorObject extendPayment(
        @WebParam(name = "extensionList", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.PaymentExtensionList extensionList
    );

    /**
     * Returns the requested Meter(s) data given Service Location.
     */
    @WebResult(name = "GetMeterByServiceLocationIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMeterByServiceLocationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterByServiceLocationID")
    @WebMethod(operationName = "GetMeterByServiceLocationID", action = "http://www.multispeak.org/Version_4.1_Release/GetMeterByServiceLocationID")
    @ResponseWrapper(localName = "GetMeterByServiceLocationIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterByServiceLocationIDResponse")
    public org.multispeak.version_4.Meters getMeterByServiceLocationID(
        @WebParam(name = "serviceLocationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String serviceLocationID,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Requester requests list of methods supported by CB.
     */
    @WebResult(name = "GetMethodsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMethods", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMethods")
    @WebMethod(operationName = "GetMethods", action = "http://www.multispeak.org/Version_4.1_Release/GetMethods")
    @ResponseWrapper(localName = "GetMethodsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMethodsResponse")
    public org.multispeak.version_4.ArrayOfString18 getMethods();

    /**
     * Returns customer usage data from the CB, chosen by meterID.
     */
    @WebResult(name = "GetUsageByMeterIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetUsageByMeterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetUsageByMeterID")
    @WebMethod(operationName = "GetUsageByMeterID", action = "http://www.multispeak.org/Version_4.1_Release/GetUsageByMeterID")
    @ResponseWrapper(localName = "GetUsageByMeterIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetUsageByMeterIDResponse")
    public org.multispeak.version_4.Usage getUsageByMeterID(
        @WebParam(name = "meterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterID meterID
    );

    /**
     * Returns the payment transactions accepted by the CB between the stated start and stop times.  This is an alternative method for obtaining payments and could replace or be in addition to the publish method CommitPaymentTransaction.
     */
    @WebResult(name = "GetPPMPaymentsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetPPMPayments", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPPMPayments")
    @WebMethod(operationName = "GetPPMPayments", action = "http://www.multispeak.org/Version_4.1_Release/GetPPMPayments")
    @ResponseWrapper(localName = "GetPPMPaymentsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPPMPaymentsResponse")
    public org.multispeak.version_4.ArrayOfPaymentTransactionList getPPMPayments(
        @WebParam(name = "startTime", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar startTime,
        @WebParam(name = "stopTime", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar stopTime
    );

    /**
     * CD notifies CB of state of connect/disconnect device(s).  The transactionID calling parameter can be used to link this action with an InitiateCDStateRequest call.  If this transaction fails, CB returns information about the failure in an array of errorObject(s).
     */
    @WebResult(name = "CDStatesNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "CDStatesNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDStatesNotification")
    @WebMethod(operationName = "CDStatesNotification", action = "http://www.multispeak.org/Version_4.1_Release/CDStatesNotification")
    @ResponseWrapper(localName = "CDStatesNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDStatesNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject cdStatesNotification(
        @WebParam(name = "states", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfCDState states,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID
    );

    /**
     * CD notifies CB of state change(s) for connect/disconnect device(s).  The transactionID calling parameter can be used to link this action with an InitiateConectDisconnect call.  If this transaction fails, CB returns information about the failure in an array of errorObject(s). The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "CDStatesChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "CDStatesChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDStatesChangedNotification")
    @WebMethod(operationName = "CDStatesChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/CDStatesChangedNotification")
    @ResponseWrapper(localName = "CDStatesChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDStatesChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject cdStatesChangedNotification(
        @WebParam(name = "stateChanges", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfCDStateChange stateChanges,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID
    );

    /**
     * Allow requester to Modify CB data for a transformer bank object.  CB returns information about failed transactions using an array of errorObjects. 
     */
    @WebResult(name = "ModifyCBDataForTransformerBankResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ModifyCBDataForTransformerBank", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForTransformerBank")
    @WebMethod(operationName = "ModifyCBDataForTransformerBank", action = "http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForTransformerBank")
    @ResponseWrapper(localName = "ModifyCBDataForTransformerBankResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForTransformerBankResponse")
    public org.multispeak.version_4.ArrayOfErrorObject modifyCBDataForTransformerBank(
        @WebParam(name = "xfmrBankData", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfTransformerBank xfmrBankData
    );

    /**
     * The Requester requests from the CB a list of names of meter reading groups.  The CB returns an array of strings including the names of the supported meterGroups.  The MR can then request the members of a specific group using the GetMeterGroupMembers method. 
     */
    @WebResult(name = "GetMeterGroupNamesResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMeterGroupNames", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterGroupNames")
    @WebMethod(operationName = "GetMeterGroupNames", action = "http://www.multispeak.org/Version_4.1_Release/GetMeterGroupNames")
    @ResponseWrapper(localName = "GetMeterGroupNamesResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterGroupNamesResponse")
    public org.multispeak.version_4.ArrayOfString18 getMeterGroupNames();

    /**
     * Publisher notifies subscriber of new or changed switching order(s) by sending switchingOrder object(s).  Subscriber returns information about failed transactions in an array of errorObjects.  The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "SwitchingOrderChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "SwitchingOrderChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.SwitchingOrderChangedNotification")
    @WebMethod(operationName = "SwitchingOrderChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/SwitchingOrderChangedNotification")
    @ResponseWrapper(localName = "SwitchingOrderChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.SwitchingOrderChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject switchingOrderChangedNotification(
        @WebParam(name = "switchingOrders", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfSwitchingOrder switchingOrders
    );

    /**
     * Publisher notifies CB of new or changed work requests(s). CB asynchronously returns service order or maintenace order numbers as necessary using a NumberCreatedNotification method call.   CB returns information about failed transactions using an array of errorObjects. 
     */
    @WebResult(name = "InitiateWorkRequestResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "InitiateWorkRequest", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.InitiateWorkRequest")
    @WebMethod(operationName = "InitiateWorkRequest", action = "http://www.multispeak.org/Version_4.1_Release/InitiateWorkRequest")
    @ResponseWrapper(localName = "InitiateWorkRequestResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.InitiateWorkRequestResponse")
    public org.multispeak.version_4.ArrayOfErrorObject initiateWorkRequest(
        @WebParam(name = "requests", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfWorkRequest requests,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID
    );

    /**
     * Returns all pole data from the CB that have changed since the specified sessionID. The calling parameter previousSessionID should carry the session identifier for the last session of data that the client has successfully received.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetModifiedPolesFromCBResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetModifiedPolesFromCB", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedPolesFromCB")
    @WebMethod(operationName = "GetModifiedPolesFromCB", action = "http://www.multispeak.org/Version_4.1_Release/GetModifiedPolesFromCB")
    @ResponseWrapper(localName = "GetModifiedPolesFromCBResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedPolesFromCBResponse")
    public org.multispeak.version_4.ArrayOfPole getModifiedPolesFromCB(
        @WebParam(name = "previousSessionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String previousSessionID,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the requested Service Location data given Account Number.
     */
    @WebResult(name = "GetServiceLocationByAccountNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByAccountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByAccountNumber")
    @WebMethod(operationName = "GetServiceLocationByAccountNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByAccountNumber")
    @ResponseWrapper(localName = "GetServiceLocationByAccountNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByAccountNumberResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByAccountNumber(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * The MR requests from the CB all meters of a given serviceType (electric, gas, water, or propane). The CB returns a meters object, which contains an array of meters by serviceType in response to this method call. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllMetersByServiceTypeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllMetersByServiceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllMetersByServiceType")
    @WebMethod(operationName = "GetAllMetersByServiceType", action = "http://www.multispeak.org/Version_4.1_Release/GetAllMetersByServiceType")
    @ResponseWrapper(localName = "GetAllMetersByServiceTypeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllMetersByServiceTypeResponse")
    public org.multispeak.version_4.Meters getAllMetersByServiceType(
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns billing data for all accounts that were billed between the startBillDate and endBillDate.  This method is used by the PPM to reconcile its records with those in the CB.
     */
    @WebResult(name = "GetBillingDataResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetBillingData", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetBillingData")
    @WebMethod(operationName = "GetBillingData", action = "http://www.multispeak.org/Version_4.1_Release/GetBillingData")
    @ResponseWrapper(localName = "GetBillingDataResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetBillingDataResponse")
    public org.multispeak.version_4.ArrayOfBillingData getBillingData(
        @WebParam(name = "startBillDate", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar startBillDate,
        @WebParam(name = "endBillDate", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar endBillDate
    );

    /**
     * Returns the requested Service Location(s) data given the Service Status. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetServiceLocationByServiceStatusResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByServiceStatus", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByServiceStatus")
    @WebMethod(operationName = "GetServiceLocationByServiceStatus", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByServiceStatus")
    @ResponseWrapper(localName = "GetServiceLocationByServiceStatusResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByServiceStatusResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByServiceStatus(
        @WebParam(name = "servStatus", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String servStatus,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Returns all electric meters.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllElectricMetersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllElectricMeters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllElectricMeters")
    @WebMethod(operationName = "GetAllElectricMeters", action = "http://www.multispeak.org/Version_4.1_Release/GetAllElectricMeters")
    @ResponseWrapper(localName = "GetAllElectricMetersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllElectricMetersResponse")
    public org.multispeak.version_4.ArrayOfElectricMeter1 getAllElectricMeters(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Publisher requests that CB extend payment terms for a specific account by sending a paymentExtensionList object.  CB sends extension information to the PP based on payment extension rules configured on the CB.  PP must subsequently commit the extension using an ExtendPayment method call if the payment extension terms were accepted by the payee.  The CB shall return the processed paymentExtensionList with the responseCode and the extendedTo date filled in with the new extended date.
     */
    @WebResult(name = "RequestPaymentExtensionResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "RequestPaymentExtension", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.RequestPaymentExtension")
    @WebMethod(operationName = "RequestPaymentExtension", action = "http://www.multispeak.org/Version_4.1_Release/RequestPaymentExtension")
    @ResponseWrapper(localName = "RequestPaymentExtensionResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.RequestPaymentExtensionResponse")
    public org.multispeak.version_4.PaymentExtensionList requestPaymentExtension(
        @WebParam(name = "extensionList", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.PaymentExtensionList extensionList
    );

    /**
     * Returns all security light data.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllSecurityLightsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllSecurityLights", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllSecurityLights")
    @WebMethod(operationName = "GetAllSecurityLights", action = "http://www.multispeak.org/Version_4.1_Release/GetAllSecurityLights")
    @ResponseWrapper(localName = "GetAllSecurityLightsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllSecurityLightsResponse")
    public org.multispeak.version_4.ArrayOfSecurityLight1 getAllSecurityLights(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Allow Requester to modify CB data for the securityLight object.  CB returns information about failed transactions using an array of errorObjects. 
     */
    @WebResult(name = "ModifyCBDataForSecurityLightResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ModifyCBDataForSecurityLight", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForSecurityLight")
    @WebMethod(operationName = "ModifyCBDataForSecurityLight", action = "http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForSecurityLight")
    @ResponseWrapper(localName = "ModifyCBDataForSecurityLightResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForSecurityLightResponse")
    public org.multispeak.version_4.ArrayOfErrorObject modifyCBDataForSecurityLight(
        @WebParam(name = "securityLightData", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfSecurityLight1 securityLightData
    );

    /**
     * Returns the requested meters corresponding to a given customer's serviceLocation, given the serviceLocation.facilityID.
     */
    @WebResult(name = "GetMetersByFacilityIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMetersByFacilityID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByFacilityID")
    @WebMethod(operationName = "GetMetersByFacilityID", action = "http://www.multispeak.org/Version_4.1_Release/GetMetersByFacilityID")
    @ResponseWrapper(localName = "GetMetersByFacilityIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByFacilityIDResponse")
    public org.multispeak.version_4.Meters getMetersByFacilityID(
        @WebParam(name = "facilityID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String facilityID,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Allow requester to Modify CB data for the customer usage object.  CB returns information about failed transactions using an array of errorObjects. 
     */
    @WebResult(name = "ModifyCBDataForUsageResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ModifyCBDataForUsage", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForUsage")
    @WebMethod(operationName = "ModifyCBDataForUsage", action = "http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForUsage")
    @ResponseWrapper(localName = "ModifyCBDataForUsageResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForUsageResponse")
    public org.multispeak.version_4.ArrayOfErrorObject modifyCBDataForUsage(
        @WebParam(name = "usageData", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfUsage usageData
    );

    /**
     * Returns the meter history events for a specific meter, chosen by meterID.
     */
    @WebResult(name = "GetMeterHistoryByMeterIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMeterHistoryByMeterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterHistoryByMeterID")
    @WebMethod(operationName = "GetMeterHistoryByMeterID", action = "http://www.multispeak.org/Version_4.1_Release/GetMeterHistoryByMeterID")
    @ResponseWrapper(localName = "GetMeterHistoryByMeterIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterHistoryByMeterIDResponse")
    public org.multispeak.version_4.ArrayOfMeterHistoryEvent getMeterHistoryByMeterID(
        @WebParam(name = "meter", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterID meter
    );

    /**
     * Publisher requests that CB authorize and process a set of transactions that have been sent as part of a paymentTransactionsList.  CB returns information about the transaction to the Publisher.
     */
    @WebResult(name = "ProcessPaymentTransactionResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ProcessPaymentTransaction", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ProcessPaymentTransaction")
    @WebMethod(operationName = "ProcessPaymentTransaction", action = "http://www.multispeak.org/Version_4.1_Release/ProcessPaymentTransaction")
    @ResponseWrapper(localName = "ProcessPaymentTransactionResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ProcessPaymentTransactionResponse")
    public org.multispeak.version_4.PaymentTransactionList processPaymentTransaction(
        @WebParam(name = "transactions", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.PaymentTransactionList transactions
    );

    /**
     * Publisher notifies CB of a change in the service location/network data by sending the changed serviceLocation object.  CB returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "ServiceLocationNetworkChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ServiceLocationNetworkChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ServiceLocationNetworkChangedNotification")
    @WebMethod(operationName = "ServiceLocationNetworkChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/ServiceLocationNetworkChangedNotification")
    @ResponseWrapper(localName = "ServiceLocationNetworkChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ServiceLocationNetworkChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject serviceLocationNetworkChangedNotification(
        @WebParam(name = "changedServiceLocations", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfServiceLocation1 changedServiceLocations
    );

    /**
     * Returns customer usage data from the CB, chosen by the objectID of serviceLocation.
     */
    @WebResult(name = "GetUsageByServiceLocationIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetUsageByServiceLocationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetUsageByServiceLocationID")
    @WebMethod(operationName = "GetUsageByServiceLocationID", action = "http://www.multispeak.org/Version_4.1_Release/GetUsageByServiceLocationID")
    @ResponseWrapper(localName = "GetUsageByServiceLocationIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetUsageByServiceLocationIDResponse")
    public org.multispeak.version_4.ArrayOfUsage getUsageByServiceLocationID(
        @WebParam(name = "serviceLocationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String serviceLocationID,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Returns all pole data from the CB. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllPolesFromCBResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllPolesFromCB", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllPolesFromCB")
    @WebMethod(operationName = "GetAllPolesFromCB", action = "http://www.multispeak.org/Version_4.1_Release/GetAllPolesFromCB")
    @ResponseWrapper(localName = "GetAllPolesFromCBResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllPolesFromCBResponse")
    public org.multispeak.version_4.ArrayOfPole getAllPolesFromCB(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns all gas meters.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllGasMetersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllGasMeters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllGasMeters")
    @WebMethod(operationName = "GetAllGasMeters", action = "http://www.multispeak.org/Version_4.1_Release/GetAllGasMeters")
    @ResponseWrapper(localName = "GetAllGasMetersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllGasMetersResponse")
    public org.multispeak.version_4.ArrayOfGasMeter1 getAllGasMeters(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Publisher notifies CB that a previously reserved service order number is being returned. CB returns failed transactions using an errorObject.
     */
    @WebResult(name = "ReturnGeneratedNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ReturnGeneratedNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ReturnGeneratedNumber")
    @WebMethod(operationName = "ReturnGeneratedNumber", action = "http://www.multispeak.org/Version_4.1_Release/ReturnGeneratedNumber")
    @ResponseWrapper(localName = "ReturnGeneratedNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ReturnGeneratedNumberResponse")
    public org.multispeak.version_4.ArrayOfErrorObject returnGeneratedNumber(
        @WebParam(name = "requestedNum", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.RequestedNumber requestedNum
    );

    /**
     * Publisher notifies subscriber that meterBase(es) have been deployed or exchanged.  Subscriber returns information about failed transactions in an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "MeterBaseExchangeNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "MeterBaseExchangeNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterBaseExchangeNotification")
    @WebMethod(operationName = "MeterBaseExchangeNotification", action = "http://www.multispeak.org/Version_4.1_Release/MeterBaseExchangeNotification")
    @ResponseWrapper(localName = "MeterBaseExchangeNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterBaseExchangeNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject meterBaseExchangeNotification(
        @WebParam(name = "MBChangeout", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfMeterBaseExchange mbChangeout
    );

    /**
     * Returns all required customer data for all customers.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllCustomersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllCustomers", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllCustomers")
    @WebMethod(operationName = "GetAllCustomers", action = "http://www.multispeak.org/Version_4.1_Release/GetAllCustomers")
    @ResponseWrapper(localName = "GetAllCustomersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllCustomersResponse")
    public org.multispeak.version_4.ArrayOfCustomer getAllCustomers(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the objectIDs for service locations for a given customer, by home phone number.
     */
    @WebResult(name = "GetServiceLocationIDByHomePhoneResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationIDByHomePhone", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationIDByHomePhone")
    @WebMethod(operationName = "GetServiceLocationIDByHomePhone", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationIDByHomePhone")
    @ResponseWrapper(localName = "GetServiceLocationIDByHomePhoneResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationIDByHomePhoneResponse")
    public org.multispeak.version_4.ArrayOfString18 getServiceLocationIDByHomePhone(
        @WebParam(name = "phone", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.TelephoneNumber phone,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Returns all required customer data for all customers that have been modified since the specified sessionID.  The calling parameter previousSessionID should carry the session identifier for the last session of data that the client has successfully received.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetModifiedCustomersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetModifiedCustomers", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedCustomers")
    @WebMethod(operationName = "GetModifiedCustomers", action = "http://www.multispeak.org/Version_4.1_Release/GetModifiedCustomers")
    @ResponseWrapper(localName = "GetModifiedCustomersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedCustomersResponse")
    public org.multispeak.version_4.ArrayOfCustomer getModifiedCustomers(
        @WebParam(name = "previousSessionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String previousSessionID,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the requested Meter(s) data given AMR vendor and device type.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetMetersByAMRTypeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMetersByAMRType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByAMRType")
    @WebMethod(operationName = "GetMetersByAMRType", action = "http://www.multispeak.org/Version_4.1_Release/GetMetersByAMRType")
    @ResponseWrapper(localName = "GetMetersByAMRTypeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByAMRTypeResponse")
    public org.multispeak.version_4.Meters getMetersByAMRType(
        @WebParam(name = "AMRVendor", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String amrVendor,
        @WebParam(name = "AMRDeviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String amrDeviceType,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * The DGN requests from the CB to reserve a service order number. The CB returns a reserved service order in the form of a requestedNumber.  
     */
    @WebResult(name = "GetNextNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetNextNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetNextNumber")
    @WebMethod(operationName = "GetNextNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetNextNumber")
    @ResponseWrapper(localName = "GetNextNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetNextNumberResponse")
    public org.multispeak.version_4.RequestedNumber getNextNumber(
        @WebParam(name = "extensions", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ExtensionsList extensions,
        @WebParam(name = "numberType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String numberType
    );

    /**
     * Returns all transfromer bank data from the CB.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllTransformerBanksFromCBResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllTransformerBanksFromCB", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllTransformerBanksFromCB")
    @WebMethod(operationName = "GetAllTransformerBanksFromCB", action = "http://www.multispeak.org/Version_4.1_Release/GetAllTransformerBanksFromCB")
    @ResponseWrapper(localName = "GetAllTransformerBanksFromCBResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllTransformerBanksFromCBResponse")
    public org.multispeak.version_4.ArrayOfTransformerBank getAllTransformerBanksFromCB(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * The Requester requests from the server a list of names of in home display groups.  The server returns an array of strings including the names of the supported inHomeDisplayGroups.  The requester can then request the members of a specific group using the GetIHDGroupMembers method. 
     */
    @WebResult(name = "GetIHDGroupNamesResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetIHDGroupNames", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetIHDGroupNames")
    @WebMethod(operationName = "GetIHDGroupNames", action = "http://www.multispeak.org/Version_4.1_Release/GetIHDGroupNames")
    @ResponseWrapper(localName = "GetIHDGroupNamesResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetIHDGroupNamesResponse")
    public org.multispeak.version_4.ArrayOfString18 getIHDGroupNames();

    /**
     * Publisher notifies subscriber that meter base(es) have been installed. Subscriber returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "MeterBaseInstalledNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "MeterBaseInstalledNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterBaseInstalledNotification")
    @WebMethod(operationName = "MeterBaseInstalledNotification", action = "http://www.multispeak.org/Version_4.1_Release/MeterBaseInstalledNotification")
    @ResponseWrapper(localName = "MeterBaseInstalledNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterBaseInstalledNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject meterBaseInstalledNotification(
        @WebParam(name = "addedMBs", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfMeterBase addedMBs
    );

    /**
     * Publisher notifies CB that load mangement device(s) have been deployed or exchanged.  CB returns information about failed transactions in an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "LMDeviceExchangeNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "LMDeviceExchangeNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.LMDeviceExchangeNotification")
    @WebMethod(operationName = "LMDeviceExchangeNotification", action = "http://www.multispeak.org/Version_4.1_Release/LMDeviceExchangeNotification")
    @ResponseWrapper(localName = "LMDeviceExchangeNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.LMDeviceExchangeNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject lmDeviceExchangeNotification(
        @WebParam(name = "LMDChangeout", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfLMDeviceExchange lmdChangeout
    );

    /**
     * Returns all required Service Location data for all Service Locations that have been modified since the specified sessionID.  The calling parameter previousSessionID should carry the session identifier for the last session of data that the client has successfully received. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetModifiedServiceLocationsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetModifiedServiceLocations", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedServiceLocations")
    @WebMethod(operationName = "GetModifiedServiceLocations", action = "http://www.multispeak.org/Version_4.1_Release/GetModifiedServiceLocations")
    @ResponseWrapper(localName = "GetModifiedServiceLocationsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedServiceLocationsResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getModifiedServiceLocations(
        @WebParam(name = "previousSessionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String previousSessionID,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Returns all propane meters.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllPropaneMetersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllPropaneMeters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllPropaneMeters")
    @WebMethod(operationName = "GetAllPropaneMeters", action = "http://www.multispeak.org/Version_4.1_Release/GetAllPropaneMeters")
    @ResponseWrapper(localName = "GetAllPropaneMetersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllPropaneMetersResponse")
    public org.multispeak.version_4.ArrayOfPropaneMeter1 getAllPropaneMeters(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns all other meters.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllOtherMetersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllOtherMeters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllOtherMeters")
    @WebMethod(operationName = "GetAllOtherMeters", action = "http://www.multispeak.org/Version_4.1_Release/GetAllOtherMeters")
    @ResponseWrapper(localName = "GetAllOtherMetersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllOtherMetersResponse")
    public org.multispeak.version_4.ArrayOfOtherMeter getAllOtherMeters(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the requested Meter(s) data given Customer ID.
     */
    @WebResult(name = "GetMeterByCustomerIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMeterByCustomerID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterByCustomerID")
    @WebMethod(operationName = "GetMeterByCustomerID", action = "http://www.multispeak.org/Version_4.1_Release/GetMeterByCustomerID")
    @ResponseWrapper(localName = "GetMeterByCustomerIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterByCustomerIDResponse")
    public org.multispeak.version_4.Meters getMeterByCustomerID(
        @WebParam(name = "customerID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String customerID
    );

    /**
     * Returns all water meters.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllWaterMetersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllWaterMeters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllWaterMeters")
    @WebMethod(operationName = "GetAllWaterMeters", action = "http://www.multispeak.org/Version_4.1_Release/GetAllWaterMeters")
    @ResponseWrapper(localName = "GetAllWaterMetersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllWaterMetersResponse")
    public org.multispeak.version_4.ArrayOfWaterMeter1 getAllWaterMeters(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Publisher notifies CB of a change in a pole by sending the changed pole object. CB returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "PoleChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "PoleChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.PoleChangedNotification")
    @WebMethod(operationName = "PoleChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/PoleChangedNotification")
    @ResponseWrapper(localName = "PoleChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.PoleChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject poleChangedNotification(
        @WebParam(name = "changedPoles", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfPole changedPoles
    );

    /**
     * The MR requests from the CB propane meter objects, given the account number. The CB returns a meters object, which can contain an array of propane meters in response to this method call. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. 
     */
    @WebResult(name = "GetPropaneMetersByAccountNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetPropaneMetersByAccountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPropaneMetersByAccountNumber")
    @WebMethod(operationName = "GetPropaneMetersByAccountNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetPropaneMetersByAccountNumber")
    @ResponseWrapper(localName = "GetPropaneMetersByAccountNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPropaneMetersByAccountNumberResponse")
    public org.multispeak.version_4.PropaneMeters getPropaneMetersByAccountNumber(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the requested Customer by home phone number.
     */
    @WebResult(name = "GetCustomerByHomePhoneResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetCustomerByHomePhone", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByHomePhone")
    @WebMethod(operationName = "GetCustomerByHomePhone", action = "http://www.multispeak.org/Version_4.1_Release/GetCustomerByHomePhone")
    @ResponseWrapper(localName = "GetCustomerByHomePhoneResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByHomePhoneResponse")
    public org.multispeak.version_4.Customer getCustomerByHomePhone(
        @WebParam(name = "phone", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.TelephoneNumber phone
    );

    /**
     * Publisher notifies CB that in-home display(s) have been installed. CB returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "InHomeDisplayInstalledNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "InHomeDisplayInstalledNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.InHomeDisplayInstalledNotification")
    @WebMethod(operationName = "InHomeDisplayInstalledNotification", action = "http://www.multispeak.org/Version_4.1_Release/InHomeDisplayInstalledNotification")
    @ResponseWrapper(localName = "InHomeDisplayInstalledNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.InHomeDisplayInstalledNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject inHomeDisplayInstalledNotification(
        @WebParam(name = "addedIHDs", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfInHomeDisplay1 addedIHDs
    );

    /**
     * Publisher notifies subscriber of meter event(s) by sending a meterEventList object.  Subscriber returns information about failed transactions in an array of errorObjects.  The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "MeterEventNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "MeterEventNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterEventNotification")
    @WebMethod(operationName = "MeterEventNotification", action = "http://www.multispeak.org/Version_4.1_Release/MeterEventNotification")
    @ResponseWrapper(localName = "MeterEventNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterEventNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject meterEventNotification(
        @WebParam(name = "events", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterEventList events
    );

    /**
     * MR notifies CB that meter(s) have been deployed or exchanged.  CB returns information about failed transactions in an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "MeterExchangeNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "MeterExchangeNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterExchangeNotification")
    @WebMethod(operationName = "MeterExchangeNotification", action = "http://www.multispeak.org/Version_4.1_Release/MeterExchangeNotification")
    @ResponseWrapper(localName = "MeterExchangeNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterExchangeNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject meterExchangeNotification(
        @WebParam(name = "meterChangeout", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterExchanges meterChangeout
    );

    /**
     * EDTR Notifies CB of a received end device (meter) shipment by sending the changed endDeviceShipment object.  CB returns information about failed transactions in an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "EndDeviceShipmentNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "EndDeviceShipmentNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.EndDeviceShipmentNotification")
    @WebMethod(operationName = "EndDeviceShipmentNotification", action = "http://www.multispeak.org/Version_4.1_Release/EndDeviceShipmentNotification")
    @ResponseWrapper(localName = "EndDeviceShipmentNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.EndDeviceShipmentNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject endDeviceShipmentNotification(
        @WebParam(name = "shipment", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.EndDeviceShipment shipment
    );

    /**
     * Publisher notifies CB that load management device(s) have been installed. CB returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "LMDeviceInstalledNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "LMDeviceInstalledNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.LMDeviceInstalledNotification")
    @WebMethod(operationName = "LMDeviceInstalledNotification", action = "http://www.multispeak.org/Version_4.1_Release/LMDeviceInstalledNotification")
    @ResponseWrapper(localName = "LMDeviceInstalledNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.LMDeviceInstalledNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject lmDeviceInstalledNotification(
        @WebParam(name = "installedLMDs", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfLoadManagementDevice1 installedLMDs
    );

    /**
     * Publisher sends new meter readings to the subscriber by sending a formattedBlock object.  Subscriber returns information about failed transactions in an array of errorObjects.The transactionID calling parameter links this Initiate request with the published data method call. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "FormattedBlockNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "FormattedBlockNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.FormattedBlockNotification")
    @WebMethod(operationName = "FormattedBlockNotification", action = "http://www.multispeak.org/Version_4.1_Release/FormattedBlockNotification")
    @ResponseWrapper(localName = "FormattedBlockNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.FormattedBlockNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject formattedBlockNotification(
        @WebParam(name = "changedMeterReads", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.FormattedBlock changedMeterReads,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID,
        @WebParam(name = "errorString", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String errorString
    );

    /**
     * Returns the requested customer account data given a service location identifier and service type.
     */
    @WebResult(name = "GetAccountByServiceLocationIDAndServiceTypeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAccountByServiceLocationIDAndServiceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAccountByServiceLocationIDAndServiceType")
    @WebMethod(operationName = "GetAccountByServiceLocationIDAndServiceType", action = "http://www.multispeak.org/Version_4.1_Release/GetAccountByServiceLocationIDAndServiceType")
    @ResponseWrapper(localName = "GetAccountByServiceLocationIDAndServiceTypeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAccountByServiceLocationIDAndServiceTypeResponse")
    public org.multispeak.version_4.Account getAccountByServiceLocationIDAndServiceType(
        @WebParam(name = "serviceLocationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String serviceLocationID,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Allow Requester to modify CB data for the streetLight object.  CB returns information about failed transactions using an array of errorObjects. 
     */
    @WebResult(name = "ModifyCBDataForStreetLightResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ModifyCBDataForStreetLight", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForStreetLight")
    @WebMethod(operationName = "ModifyCBDataForStreetLight", action = "http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForStreetLight")
    @ResponseWrapper(localName = "ModifyCBDataForStreetLightResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForStreetLightResponse")
    public org.multispeak.version_4.ArrayOfErrorObject modifyCBDataForStreetLight(
        @WebParam(name = "streetLightData", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfStreetLight streetLightData
    );

    /**
     * The Requester requests from the server the members of a specific in home display group, identified by the IHDGroupName parameter.  This method is used, along with the GetIHDGroupNames method to enable the requester to get information about which meters are included in a specific in home display group.  The server returns an inHomeDisplayGroup in response to this method call.  
     */
    @WebResult(name = "GetIHDGroupMembersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetIHDGroupMembers", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetIHDGroupMembers")
    @WebMethod(operationName = "GetIHDGroupMembers", action = "http://www.multispeak.org/Version_4.1_Release/GetIHDGroupMembers")
    @ResponseWrapper(localName = "GetIHDGroupMembersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetIHDGroupMembersResponse")
    public org.multispeak.version_4.InHomeDisplayGroup getIHDGroupMembers(
        @WebParam(name = "IHDGroupName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String ihdGroupName
    );

    /**
     * The Requester requests from the CB a list of convenience fees for a set of transactions sent in the form of a paymentTransactionsList.
     */
    @WebResult(name = "GetConvenienceFeesResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetConvenienceFees", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetConvenienceFees")
    @WebMethod(operationName = "GetConvenienceFees", action = "http://www.multispeak.org/Version_4.1_Release/GetConvenienceFees")
    @ResponseWrapper(localName = "GetConvenienceFeesResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetConvenienceFeesResponse")
    public org.multispeak.version_4.ConvenienceFeeList getConvenienceFees(
        @WebParam(name = "transactions", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.PaymentTransactionList transactions
    );

    /**
     * Returns all required Service Location data for all Service Locations. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllServiceLocationsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllServiceLocations", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllServiceLocations")
    @WebMethod(operationName = "GetAllServiceLocations", action = "http://www.multispeak.org/Version_4.1_Release/GetAllServiceLocations")
    @ResponseWrapper(localName = "GetAllServiceLocationsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllServiceLocationsResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getAllServiceLocations(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns all meters corresponding to a given customer name.
     */
    @WebResult(name = "GetMetersByCustomerNameResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMetersByCustomerName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByCustomerName")
    @WebMethod(operationName = "GetMetersByCustomerName", action = "http://www.multispeak.org/Version_4.1_Release/GetMetersByCustomerName")
    @ResponseWrapper(localName = "GetMetersByCustomerNameResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByCustomerNameResponse")
    public org.multispeak.version_4.Meters getMetersByCustomerName(
        @WebParam(name = "firstName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String firstName,
        @WebParam(name = "lastName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastName
    );

    /**
     * The MR requests from the CB gas meter objects, given the account number. The CB returns a meters object, which can contain an array of gas meters in response to this method call. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. 
     */
    @WebResult(name = "GetGasMetersByAccountNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetGasMetersByAccountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetGasMetersByAccountNumber")
    @WebMethod(operationName = "GetGasMetersByAccountNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetGasMetersByAccountNumber")
    @ResponseWrapper(localName = "GetGasMetersByAccountNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetGasMetersByAccountNumberResponse")
    public org.multispeak.version_4.GasMeters getGasMetersByAccountNumber(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the requested Service Location(s) data given the Grid Location.
     */
    @WebResult(name = "GetServiceLocationByGridLocationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByGridLocation", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByGridLocation")
    @WebMethod(operationName = "GetServiceLocationByGridLocation", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByGridLocation")
    @ResponseWrapper(localName = "GetServiceLocationByGridLocationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByGridLocationResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByGridLocation(
        @WebParam(name = "gridLocation", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String gridLocation,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Allow client to Modify CB data for the Service Location object.  If this transaction fails, CB returns information in a SOAPFault.
     */
    @WebResult(name = "ModifyCBDataForServiceLocationsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ModifyCBDataForServiceLocations", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForServiceLocations")
    @WebMethod(operationName = "ModifyCBDataForServiceLocations", action = "http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForServiceLocations")
    @ResponseWrapper(localName = "ModifyCBDataForServiceLocationsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForServiceLocationsResponse")
    public org.multispeak.version_4.ArrayOfErrorObject modifyCBDataForServiceLocations(
        @WebParam(name = "serviceLocationData", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfServiceLocation1 serviceLocationData
    );

    /**
     * Returns the billing account load data for all line sections/nodes (eaLocs) for a specific month.  The month should be described by an integer (January=1, February=2, etc.) and the year by an integer in four digit format.   The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetBillingAccountLoadDataByMonthResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetBillingAccountLoadDataByMonth", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetBillingAccountLoadDataByMonth")
    @WebMethod(operationName = "GetBillingAccountLoadDataByMonth", action = "http://www.multispeak.org/Version_4.1_Release/GetBillingAccountLoadDataByMonth")
    @ResponseWrapper(localName = "GetBillingAccountLoadDataByMonthResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetBillingAccountLoadDataByMonthResponse")
    public org.multispeak.version_4.ArrayOfBillingAccountLoad getBillingAccountLoadDataByMonth(
        @WebParam(name = "month", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        int month,
        @WebParam(name = "year", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        int year,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * CD notifies CB of state of a connect/disconnect device.  The transactionID calling parameter can be used to link this action with an InitiateCDStateRequest call.  If this transaction fails, CB returns information about the failure in a SOAPFault.
     */
    @WebResult(name = "CDStateNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "CDStateNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDStateNotification")
    @WebMethod(operationName = "CDStateNotification", action = "http://www.multispeak.org/Version_4.1_Release/CDStateNotification")
    @ResponseWrapper(localName = "CDStateNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDStateNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject cdStateNotification(
        @WebParam(name = "state", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.CDState state,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID
    );

    /**
     * Returns the requested Meter(s) data given Account Number, for all serviceTypes.
     */
    @WebResult(name = "GetAllMetersByAccountNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllMetersByAccountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllMetersByAccountNumber")
    @WebMethod(operationName = "GetAllMetersByAccountNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetAllMetersByAccountNumber")
    @ResponseWrapper(localName = "GetAllMetersByAccountNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllMetersByAccountNumberResponse")
    public org.multispeak.version_4.Meters getAllMetersByAccountNumber(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber
    );

    /**
     * Returns the requested Service Location(s) data given the Service ShutOff Date.
     */
    @WebResult(name = "GetServiceLocationByShutOffDateResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByShutOffDate", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByShutOffDate")
    @WebMethod(operationName = "GetServiceLocationByShutOffDate", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByShutOffDate")
    @ResponseWrapper(localName = "GetServiceLocationByShutOffDateResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByShutOffDateResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByShutOffDate(
        @WebParam(name = "shutOffDate", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar shutOffDate,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Publisher notifies CB of new or changed assignment(s) by sending the changed assignment object(s).  CB returns information about failed transactions using an array of errorObjects.  The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "AssignmentNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "AssignmentNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.AssignmentNotification")
    @WebMethod(operationName = "AssignmentNotification", action = "http://www.multispeak.org/Version_4.1_Release/AssignmentNotification")
    @ResponseWrapper(localName = "AssignmentNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.AssignmentNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject assignmentNotification(
        @WebParam(name = "assignments", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfAssignment assignments,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID
    );

    /**
     * Returns the requested accounts if any exists, given the customer identifier.
     */
    @WebResult(name = "GetAccountsByCustomerIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAccountsByCustomerID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAccountsByCustomerID")
    @WebMethod(operationName = "GetAccountsByCustomerID", action = "http://www.multispeak.org/Version_4.1_Release/GetAccountsByCustomerID")
    @ResponseWrapper(localName = "GetAccountsByCustomerIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAccountsByCustomerIDResponse")
    public org.multispeak.version_4.ArrayOfAccount1 getAccountsByCustomerID(
        @WebParam(name = "customerID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String customerID
    );

    /**
     * Publisher requests that CB process a set of transactions that the PP has previously authorized and that have been sent as part of a paymentTransactionsList.  CB returns information about the transactions to the Publisher.
     */
    @WebResult(name = "CommitPaymentTransactionResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "CommitPaymentTransaction", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CommitPaymentTransaction")
    @WebMethod(operationName = "CommitPaymentTransaction", action = "http://www.multispeak.org/Version_4.1_Release/CommitPaymentTransaction")
    @ResponseWrapper(localName = "CommitPaymentTransactionResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CommitPaymentTransactionResponse")
    public org.multispeak.version_4.PaymentTransactionList commitPaymentTransaction(
        @WebParam(name = "transactions", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.PaymentTransactionList transactions
    );

    /**
     * Returns the requested Service Location data given Service Location ID.
     */
    @WebResult(name = "GetServiceLocationByServiceLocationIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByServiceLocationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByServiceLocationID")
    @WebMethod(operationName = "GetServiceLocationByServiceLocationID", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByServiceLocationID")
    @ResponseWrapper(localName = "GetServiceLocationByServiceLocationIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByServiceLocationIDResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByServiceLocationID(
        @WebParam(name = "serviceLocationId", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String serviceLocationId,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * The Requester requests from the CB a list of payableitems for a specific account.  The CB returns a payableItemList object.
     */
    @WebResult(name = "GetPayableItemsListResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetPayableItemsList", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPayableItemsList")
    @WebMethod(operationName = "GetPayableItemsList", action = "http://www.multispeak.org/Version_4.1_Release/GetPayableItemsList")
    @ResponseWrapper(localName = "GetPayableItemsListResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPayableItemsListResponse")
    public org.multispeak.version_4.PayableItemList getPayableItemsList(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber
    );

    /**
     * Returns all meters corresponding to a given search string.  This method can return any meters associated with customer, serviceLocation, meter,accountNumber, or meterBase containing or starting with the seach string.  For instance, a  search string of 123 could return meters for accountNumber = 12345678, customer = as123666, etc.
     */
    @WebResult(name = "GetMetersBySearchStringResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMetersBySearchString", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersBySearchString")
    @WebMethod(operationName = "GetMetersBySearchString", action = "http://www.multispeak.org/Version_4.1_Release/GetMetersBySearchString")
    @ResponseWrapper(localName = "GetMetersBySearchStringResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersBySearchStringResponse")
    public org.multispeak.version_4.Meters getMetersBySearchString(
        @WebParam(name = "searchString", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String searchString
    );

    /**
     * The MR requests from the CB all customers of a given serviceType (electric, gas, water, or propane). The CB returns an array of customer objects. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllCustomersByServiceTypeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllCustomersByServiceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllCustomersByServiceType")
    @WebMethod(operationName = "GetAllCustomersByServiceType", action = "http://www.multispeak.org/Version_4.1_Release/GetAllCustomersByServiceType")
    @ResponseWrapper(localName = "GetAllCustomersByServiceTypeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllCustomersByServiceTypeResponse")
    public org.multispeak.version_4.ArrayOfCustomer getAllCustomersByServiceType(
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns all required Meter data for all Meters.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllMetersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllMeters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllMeters")
    @WebMethod(operationName = "GetAllMeters", action = "http://www.multispeak.org/Version_4.1_Release/GetAllMeters")
    @ResponseWrapper(localName = "GetAllMetersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllMetersResponse")
    public org.multispeak.version_4.Meters getAllMeters(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Publisher notifies CB of a change in a transformerBank by sending the changed transformerBank object.  CB returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "TransformerBankChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "TransformerBankChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.TransformerBankChangedNotification")
    @WebMethod(operationName = "TransformerBankChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/TransformerBankChangedNotification")
    @ResponseWrapper(localName = "TransformerBankChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.TransformerBankChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject transformerBankChangedNotification(
        @WebParam(name = "changedXfmrBanks", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfTransformerBank changedXfmrBanks
    );

    /**
     * Returns the service orders that are associated with a specific service location, specified by its serviceLocationID.
     */
    @WebResult(name = "GetServiceOrdersByServiceLocationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceOrdersByServiceLocation", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceOrdersByServiceLocation")
    @WebMethod(operationName = "GetServiceOrdersByServiceLocation", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceOrdersByServiceLocation")
    @ResponseWrapper(localName = "GetServiceOrdersByServiceLocationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceOrdersByServiceLocationResponse")
    public org.multispeak.version_4.ArrayOfServiceOrder1 getServiceOrdersByServiceLocation(
        @WebParam(name = "serviceLocationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String serviceLocationID
    );

    /**
     * Returns the requested Service Location(s) data given the Phase. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetServiceLocationByPhaseCodeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByPhaseCode", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByPhaseCode")
    @WebMethod(operationName = "GetServiceLocationByPhaseCode", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByPhaseCode")
    @ResponseWrapper(localName = "GetServiceLocationByPhaseCodeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByPhaseCodeResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByPhaseCode(
        @WebParam(name = "phaseCode", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.PhaseCode phaseCode,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * CD notifies CB of state change for a connect/disconnect device By meterID and loadActionCode.  The transactionID calling parameter can be used to link this action with an InitiateConectDisconnect call.  If this transaction fails, CB returns information about the failure in a SOAPFault. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "CDStateChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "CDStateChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDStateChangedNotification")
    @WebMethod(operationName = "CDStateChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/CDStateChangedNotification")
    @ResponseWrapper(localName = "CDStateChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDStateChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject cdStateChangedNotification(
        @WebParam(name = "stateChange", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.CDStateChange stateChange,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID
    );

    /**
     * The MR requests from the CB water meter objects, given the account number. The CB returns a meters object, which can contain an array of water meters in response to this method call. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. 
     */
    @WebResult(name = "GetWaterMetersByAccountNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetWaterMetersByAccountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetWaterMetersByAccountNumber")
    @WebMethod(operationName = "GetWaterMetersByAccountNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetWaterMetersByAccountNumber")
    @ResponseWrapper(localName = "GetWaterMetersByAccountNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetWaterMetersByAccountNumberResponse")
    public org.multispeak.version_4.WaterMeters getWaterMetersByAccountNumber(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Allow client to Modify CB data for customer objects.  If this transaction fails, CB returns information in a SOAPFault. 
     */
    @WebResult(name = "ModifyCBDataForCustomerResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ModifyCBDataForCustomer", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForCustomer")
    @WebMethod(operationName = "ModifyCBDataForCustomer", action = "http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForCustomer")
    @ResponseWrapper(localName = "ModifyCBDataForCustomerResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForCustomerResponse")
    public org.multispeak.version_4.ArrayOfErrorObject modifyCBDataForCustomer(
        @WebParam(name = "customerData", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfCustomer customerData
    );

    /**
     * Returns the requested Customer given the Doing Business As (DBA) name.
     */
    @WebResult(name = "GetCustomerByDBANameResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetCustomerByDBAName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByDBAName")
    @WebMethod(operationName = "GetCustomerByDBAName", action = "http://www.multispeak.org/Version_4.1_Release/GetCustomerByDBAName")
    @ResponseWrapper(localName = "GetCustomerByDBANameResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByDBANameResponse")
    public org.multispeak.version_4.Customer getCustomerByDBAName(
        @WebParam(name = "dBAName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String dBAName
    );

    /**
     * Publisher sends new interval meter readings to the subscriber by sending an intervalData  object.  Subscriber returns information about failed transactions in an array of errorObjects.The transactionID calling parameter links this Initiate request with the published data method call. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "IntervalDataNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "IntervalDataNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.IntervalDataNotification")
    @WebMethod(operationName = "IntervalDataNotification", action = "http://www.multispeak.org/Version_4.1_Release/IntervalDataNotification")
    @ResponseWrapper(localName = "IntervalDataNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.IntervalDataNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject intervalDataNotification(
        @WebParam(name = "intervalReads", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.IntervalData intervalReads,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID,
        @WebParam(name = "errorString", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String errorString
    );

    /**
     * Returns detailed billing data for a specific account.  This method is used by the PPM to reconcile its records with those in the CB.
     */
    @WebResult(name = "GetBillingDetailResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetBillingDetail", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetBillingDetail")
    @WebMethod(operationName = "GetBillingDetail", action = "http://www.multispeak.org/Version_4.1_Release/GetBillingDetail")
    @ResponseWrapper(localName = "GetBillingDetailResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetBillingDetailResponse")
    public org.multispeak.version_4.ArrayOfBillingDetail getBillingDetail(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "cisBillDate", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar cisBillDate
    );

    /**
     * Returns all meters corresponding to a given customer's home phone number.  HomeAC is the area code and homePhone is the 7-digit local phone number for the customer of interest.
     */
    @WebResult(name = "GetMetersByHomePhoneResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMetersByHomePhone", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByHomePhone")
    @WebMethod(operationName = "GetMetersByHomePhone", action = "http://www.multispeak.org/Version_4.1_Release/GetMetersByHomePhone")
    @ResponseWrapper(localName = "GetMetersByHomePhoneResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersByHomePhoneResponse")
    public org.multispeak.version_4.Meters getMetersByHomePhone(
        @WebParam(name = "phone", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.TelephoneNumber phone
    );

    /**
     * Allow Requester to modify CB data for the pole object.  CB returns information about failed transactions using an array of errorObjects. 
     */
    @WebResult(name = "ModifyCBDataForPoleResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ModifyCBDataForPole", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForPole")
    @WebMethod(operationName = "ModifyCBDataForPole", action = "http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForPole")
    @ResponseWrapper(localName = "ModifyCBDataForPoleResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForPoleResponse")
    public org.multispeak.version_4.ArrayOfErrorObject modifyCBDataForPole(
        @WebParam(name = "poleData", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfPole poleData
    );

    /**
     * Returns pole data from the CB, chosen by pole number.
     */
    @WebResult(name = "GetPoleByPoleNumberFromCBResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetPoleByPoleNumberFromCB", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPoleByPoleNumberFromCB")
    @WebMethod(operationName = "GetPoleByPoleNumberFromCB", action = "http://www.multispeak.org/Version_4.1_Release/GetPoleByPoleNumberFromCB")
    @ResponseWrapper(localName = "GetPoleByPoleNumberFromCBResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPoleByPoleNumberFromCBResponse")
    public org.multispeak.version_4.Pole getPoleByPoleNumberFromCB(
        @WebParam(name = "poleNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String poleNumber
    );

    /**
     * This method permits a client to have changed information on domain names published to it using a previously arranged subscription, set up using the RegisterForServiceMethod. The client should first obtain a registrationID and then register for service, including the DomainNamesChangedNotification as one of the methods in the list of methods to which the client has subscribed.  The server shall include the registrationID for the subscription in the message header so that the client can determine the source of the  domainName information. 
     */
    @WebResult(name = "DomainNamesChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "DomainNamesChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.DomainNamesChangedNotification")
    @WebMethod(operationName = "DomainNamesChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/DomainNamesChangedNotification")
    @ResponseWrapper(localName = "DomainNamesChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.DomainNamesChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject domainNamesChangedNotification(
        @WebParam(name = "changedDomainNames", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfDomainNameChange changedDomainNames
    );

    /**
     * Publisher Notifies CB of a change in the LoadProfile object(s) by sending the changed profileObject(s).  CB returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "LoadProfileChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "LoadProfileChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.LoadProfileChangedNotification")
    @WebMethod(operationName = "LoadProfileChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/LoadProfileChangedNotification")
    @ResponseWrapper(localName = "LoadProfileChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.LoadProfileChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject loadProfileChangedNotification(
        @WebParam(name = "changedLoadProfiles", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfProfileObject changedLoadProfiles
    );

    /**
     * Publisher notifies subscriber of a change in the History Log by sending the changed historyLog object.  CB returns information about failed transactions in an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "HistoryLogChangedNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "HistoryLogChangedNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.HistoryLogChangedNotification")
    @WebMethod(operationName = "HistoryLogChangedNotification", action = "http://www.multispeak.org/Version_4.1_Release/HistoryLogChangedNotification")
    @ResponseWrapper(localName = "HistoryLogChangedNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.HistoryLogChangedNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject historyLogChangedNotification(
        @WebParam(name = "changedHistoryLogs", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfHistoryLog changedHistoryLogs
    );

    /**
     * Returns account data for all customer accounts.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllAccountsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllAccounts", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllAccounts")
    @WebMethod(operationName = "GetAllAccounts", action = "http://www.multispeak.org/Version_4.1_Release/GetAllAccounts")
    @ResponseWrapper(localName = "GetAllAccountsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllAccountsResponse")
    public org.multispeak.version_4.ArrayOfAccount1 getAllAccounts(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the requested service location ID given the account number at the service location.
     */
    @WebResult(name = "GetServiceLocationIDByAccountNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationIDByAccountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationIDByAccountNumber")
    @WebMethod(operationName = "GetServiceLocationIDByAccountNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationIDByAccountNumber")
    @ResponseWrapper(localName = "GetServiceLocationIDByAccountNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationIDByAccountNumberResponse")
    public java.lang.String getServiceLocationIDByAccountNumber(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * EDTR Notifies subscriber of a completion of tests on electric meters by sending an array of testedElectricMeters.  Subscriber returns information about failed transactions in an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "MeterTestNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "MeterTestNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterTestNotification")
    @WebMethod(operationName = "MeterTestNotification", action = "http://www.multispeak.org/Version_4.1_Release/MeterTestNotification")
    @ResponseWrapper(localName = "MeterTestNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterTestNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject meterTestNotification(
        @WebParam(name = "tests", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfTestedElectricMeter tests
    );

    /**
     * The MR requests from the CB electric meter objects, given the account number. The CB returns a meters object, which can contain an array of electric meters in response to this method call. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. 
     */
    @WebResult(name = "GetElectricMetersByAccountNumberResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetElectricMetersByAccountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetElectricMetersByAccountNumber")
    @WebMethod(operationName = "GetElectricMetersByAccountNumber", action = "http://www.multispeak.org/Version_4.1_Release/GetElectricMetersByAccountNumber")
    @ResponseWrapper(localName = "GetElectricMetersByAccountNumberResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetElectricMetersByAccountNumberResponse")
    public org.multispeak.version_4.ElectricMeters getElectricMetersByAccountNumber(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the balance adjustments to be made on the Requester's system by the CB between the stated start and stop times.  This is an alternative method for obtaining balance adjustments and could replace or be in addition to the publish method AdjustPPMBalance.
     */
    @WebResult(name = "GetPPMBalanceAdjustmentsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetPPMBalanceAdjustments", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPPMBalanceAdjustments")
    @WebMethod(operationName = "GetPPMBalanceAdjustments", action = "http://www.multispeak.org/Version_4.1_Release/GetPPMBalanceAdjustments")
    @ResponseWrapper(localName = "GetPPMBalanceAdjustmentsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetPPMBalanceAdjustmentsResponse")
    public org.multispeak.version_4.ArrayOfPpmBalanceAdjustment getPPMBalanceAdjustments(
        @WebParam(name = "startTime", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar startTime,
        @WebParam(name = "stopTime", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar stopTime
    );

    /**
     * Returns the requested Customer data given a meter identifier.
     */
    @WebResult(name = "GetCustomerByMeterIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetCustomerByMeterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByMeterID")
    @WebMethod(operationName = "GetCustomerByMeterID", action = "http://www.multispeak.org/Version_4.1_Release/GetCustomerByMeterID")
    @ResponseWrapper(localName = "GetCustomerByMeterIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByMeterIDResponse")
    public org.multispeak.version_4.Customer getCustomerByMeterID(
        @WebParam(name = "meterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterID meterID
    );

    /**
     * This method deletes a previously established subscription (registration for service) that carries the registration identifer listed in the input parameter registrationID.
     */
    @WebResult(name = "UnregisterForServiceResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "UnregisterForService", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.UnregisterForService")
    @WebMethod(operationName = "UnregisterForService", action = "http://www.multispeak.org/Version_4.1_Release/UnregisterForService")
    @ResponseWrapper(localName = "UnregisterForServiceResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.UnregisterForServiceResponse")
    public org.multispeak.version_4.ArrayOfErrorObject unregisterForService(
        @WebParam(name = "registrationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String registrationID
    );

    /**
     * The client requests from the server a list of names of domains supported by the server.  This method is used, along with the GetDomainMembers method to enable systems to exchange information about application-specific or installation-specific lists of information, such as the lists of counties for this installation or the list of serviceStatusCodes used by the server.It is recommended that domain names be returned in the form of the name of a named object (noun) in the MultiSpeak schema dotted with the field name of interest.  For instance, if the system of record is returning workflow status codes that would be used on work orders, it is suggested that the domain name be called “workOrder.workflowStatus”, using the same spelling and capitalization used in the MultiSpeak schema. 
     */
    @WebResult(name = "GetDomainNamesResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetDomainNames", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetDomainNames")
    @WebMethod(operationName = "GetDomainNames", action = "http://www.multispeak.org/Version_4.1_Release/GetDomainNames")
    @ResponseWrapper(localName = "GetDomainNamesResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetDomainNamesResponse")
    public org.multispeak.version_4.ArrayOfString18 getDomainNames();

    /**
     * Returns the requested service location ID given the meterID at the service location.
     */
    @WebResult(name = "GetServiceLocationIDByMeterResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationIDByMeter", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationIDByMeter")
    @WebMethod(operationName = "GetServiceLocationIDByMeter", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationIDByMeter")
    @ResponseWrapper(localName = "GetServiceLocationIDByMeterResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationIDByMeterResponse")
    public java.lang.String getServiceLocationIDByMeter(
        @WebParam(name = "meterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterID meterID
    );

    /**
     * Returns the requested Service Location data given the meterID of a meter served at that location.
     */
    @WebResult(name = "GetServiceLocationByMeterIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByMeterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByMeterID")
    @WebMethod(operationName = "GetServiceLocationByMeterID", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByMeterID")
    @ResponseWrapper(localName = "GetServiceLocationByMeterIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByMeterIDResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByMeterID(
        @WebParam(name = "meterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterID meterID
    );

    /**
     * Returns the requested customer account data given a meterID and service type.
     */
    @WebResult(name = "GetAccountByMeterIDAndServiceTypeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAccountByMeterIDAndServiceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAccountByMeterIDAndServiceType")
    @WebMethod(operationName = "GetAccountByMeterIDAndServiceType", action = "http://www.multispeak.org/Version_4.1_Release/GetAccountByMeterIDAndServiceType")
    @ResponseWrapper(localName = "GetAccountByMeterIDAndServiceTypeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAccountByMeterIDAndServiceTypeResponse")
    public org.multispeak.version_4.Account getAccountByMeterIDAndServiceType(
        @WebParam(name = "meterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterID meterID,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * Publisher notifies CB that connect/disconnect device(s) have been deployed or exchanged.  CB returns information about failed transactions in an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "CDDeviceExchangeNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "CDDeviceExchangeNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDDeviceExchangeNotification")
    @WebMethod(operationName = "CDDeviceExchangeNotification", action = "http://www.multispeak.org/Version_4.1_Release/CDDeviceExchangeNotification")
    @ResponseWrapper(localName = "CDDeviceExchangeNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDDeviceExchangeNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject cdDeviceExchangeNotification(
        @WebParam(name = "CDDChangeout", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfCDDeviceExchange cddChangeout
    );

    /**
     * Returns customer usage data from the CB, chosen by calendar month number (January =1, February=2, etc.)The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetUsageByMonthResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetUsageByMonth", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetUsageByMonth")
    @WebMethod(operationName = "GetUsageByMonth", action = "http://www.multispeak.org/Version_4.1_Release/GetUsageByMonth")
    @ResponseWrapper(localName = "GetUsageByMonthResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetUsageByMonthResponse")
    public org.multispeak.version_4.ArrayOfUsage getUsageByMonth(
        @WebParam(name = "monthNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        int monthNumber,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns all required Meter data for all Meters that have been modified since the specified sessionID.  The calling parameter previousSessionID should carry the session identifier for the last session of data that the client has successfully received.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent.
     */
    @WebResult(name = "GetModifiedMetersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetModifiedMeters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedMeters")
    @WebMethod(operationName = "GetModifiedMeters", action = "http://www.multispeak.org/Version_4.1_Release/GetModifiedMeters")
    @ResponseWrapper(localName = "GetModifiedMetersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetModifiedMetersResponse")
    public org.multispeak.version_4.Meters getModifiedMeters(
        @WebParam(name = "previousSessionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String previousSessionID,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * This method requests the return of existing registration information (that is to say the details of what is subscribed on this subscription) for a specific registrationID.  The server should return a SOAPFault if the registrationID is not valid.
     */
    @WebResult(name = "GetRegistrationInfoByIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetRegistrationInfoByID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetRegistrationInfoByID")
    @WebMethod(operationName = "GetRegistrationInfoByID", action = "http://www.multispeak.org/Version_4.1_Release/GetRegistrationInfoByID")
    @ResponseWrapper(localName = "GetRegistrationInfoByIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetRegistrationInfoByIDResponse")
    public org.multispeak.version_4.RegistrationInfo getRegistrationInfoByID(
        @WebParam(name = "registrationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String registrationID
    );

    /**
     * Returns transformer bank data from the CB, chosen by unitID (objectID of constituent unit of transformerBank).
     */
    @WebResult(name = "GetTransformerBankByUnitIDFromCBResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetTransformerBankByUnitIDFromCB", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetTransformerBankByUnitIDFromCB")
    @WebMethod(operationName = "GetTransformerBankByUnitIDFromCB", action = "http://www.multispeak.org/Version_4.1_Release/GetTransformerBankByUnitIDFromCB")
    @ResponseWrapper(localName = "GetTransformerBankByUnitIDFromCBResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetTransformerBankByUnitIDFromCBResponse")
    public org.multispeak.version_4.TransformerBank getTransformerBankByUnitIDFromCB(
        @WebParam(name = "unitID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String unitID
    );

    /**
     * Publisher notifies CB that connect/disconnect device(s) have been installed. CB returns information about failed transactions using an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "CDDeviceInstalledNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "CDDeviceInstalledNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDDeviceInstalledNotification")
    @WebMethod(operationName = "CDDeviceInstalledNotification", action = "http://www.multispeak.org/Version_4.1_Release/CDDeviceInstalledNotification")
    @ResponseWrapper(localName = "CDDeviceInstalledNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.CDDeviceInstalledNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject cdDeviceInstalledNotification(
        @WebParam(name = "installedCDDs", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfCDDevice1 installedCDDs
    );

    /**
     * Publisher notifies CB that in-home displays(s) have been deployed or exchanged.  CB returns information about failed transactions in an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "InHomeDisplayExchangeNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "InHomeDisplayExchangeNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.InHomeDisplayExchangeNotification")
    @WebMethod(operationName = "InHomeDisplayExchangeNotification", action = "http://www.multispeak.org/Version_4.1_Release/InHomeDisplayExchangeNotification")
    @ResponseWrapper(localName = "InHomeDisplayExchangeNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.InHomeDisplayExchangeNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject inHomeDisplayExchangeNotification(
        @WebParam(name = "IHDChangeout", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfInHomeDisplayExchange ihdChangeout
    );

    /**
     * Allow client to Modify CB data for the Meter object.  If this transaction fails, CB returns information in a SOAPFault.
     */
    @WebResult(name = "ModifyCBDataForMetersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ModifyCBDataForMeters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForMeters")
    @WebMethod(operationName = "ModifyCBDataForMeters", action = "http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForMeters")
    @ResponseWrapper(localName = "ModifyCBDataForMetersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ModifyCBDataForMetersResponse")
    public org.multispeak.version_4.ArrayOfErrorObject modifyCBDataForMeters(
        @WebParam(name = "meterData", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.Meters meterData
    );

    /**
     * Requests from the CB all serviceLocations that have services of a given serviceType (electric, gas, water, or propane). The CB returns a serviceLocations object, which contains an array of serviceLocations by serviceType in response to this method call. The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllServiceLocationsByServiceTypeResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllServiceLocationsByServiceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllServiceLocationsByServiceType")
    @WebMethod(operationName = "GetAllServiceLocationsByServiceType", action = "http://www.multispeak.org/Version_4.1_Release/GetAllServiceLocationsByServiceType")
    @ResponseWrapper(localName = "GetAllServiceLocationsByServiceTypeResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllServiceLocationsByServiceTypeResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getAllServiceLocationsByServiceType(
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType,
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * The client requests from the server the members of a specific domain of information, identified by the domainName parameter, which are supported by the server.  This method is used, along with the GetDomainNames method to enable systems to exchange information about application-specific or installation-specific lists of information, such as the lists of counties for this installation or the list of serviceStatusCodes used by the server.
     */
    @WebResult(name = "GetDomainMembersResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetDomainMembers", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetDomainMembers")
    @WebMethod(operationName = "GetDomainMembers", action = "http://www.multispeak.org/Version_4.1_Release/GetDomainMembers")
    @ResponseWrapper(localName = "GetDomainMembersResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetDomainMembersResponse")
    public org.multispeak.version_4.ArrayOfDomainMember getDomainMembers(
        @WebParam(name = "domainName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String domainName
    );

    /**
     * This method establishs a subscription using a previously requested registrationID. The calling parameter registrationInfo is a complex type that includes the following information: registrationID - the previously requested registrationID obtained from the publisher by calling RequestRegistrationID, responseURL – the URL to which information should subsequently be published on this subscription, msFunction – the abbreviated string name of the MultiSpeak method making the subscription request (for instance, if an application that exposes the Meter Reading function has made the request, then the msFunction variable should include “MR”), methodsList – An array of strings that contain the string names of the MultiSpeak methods to which the subscriber would like to subscribe.  Subsequent calls to RegisterForService on an existing subscription replace prior subscription details in their entirety - they do NOT add to an existing subscription.
     */
    @WebResult(name = "RegisterForServiceResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "RegisterForService", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.RegisterForService")
    @WebMethod(operationName = "RegisterForService", action = "http://www.multispeak.org/Version_4.1_Release/RegisterForService")
    @ResponseWrapper(localName = "RegisterForServiceResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.RegisterForServiceResponse")
    public org.multispeak.version_4.ArrayOfErrorObject registerForService(
        @WebParam(name = "registrationDetails", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.RegistrationInfo registrationDetails
    );

    /**
     * Returns the requested Meter data given meterID.
     */
    @WebResult(name = "GetMeterByMeterIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMeterByMeterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterByMeterID")
    @WebMethod(operationName = "GetMeterByMeterID", action = "http://www.multispeak.org/Version_4.1_Release/GetMeterByMeterID")
    @ResponseWrapper(localName = "GetMeterByMeterIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterByMeterIDResponse")
    public org.multispeak.version_4.Meters getMeterByMeterID(
        @WebParam(name = "meterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterID meterID
    );

    /**
     * Returns the requested Customer if it exists.
     */
    @WebResult(name = "GetCustomerByCustomerIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetCustomerByCustomerID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByCustomerID")
    @WebMethod(operationName = "GetCustomerByCustomerID", action = "http://www.multispeak.org/Version_4.1_Release/GetCustomerByCustomerID")
    @ResponseWrapper(localName = "GetCustomerByCustomerIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByCustomerIDResponse")
    public org.multispeak.version_4.Customer getCustomerByCustomerID(
        @WebParam(name = "customerId", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String customerId
    );

    /**
     * Returns the requested meters corresponding to a given customer's serviceLocation, given the serviceLocation.siteID
     */
    @WebResult(name = "GetMetersBySiteIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMetersBySiteID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersBySiteID")
    @WebMethod(operationName = "GetMetersBySiteID", action = "http://www.multispeak.org/Version_4.1_Release/GetMetersBySiteID")
    @ResponseWrapper(localName = "GetMetersBySiteIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMetersBySiteIDResponse")
    public org.multispeak.version_4.Meters getMetersBySiteID(
        @WebParam(name = "siteID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String siteID,
        @WebParam(name = "serviceType", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ServiceType serviceType
    );

    /**
     * The Requester requests from the CB a list of names of meter reading groups for a specific meter.  The CB returns an array of strings including the names of the supported meterGroups.  The MR can then request the members of a specific group using the GetMeterGroupMembers method. 
     */
    @WebResult(name = "GetMeterGroupNamesByMeterIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMeterGroupNamesByMeterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterGroupNamesByMeterID")
    @WebMethod(operationName = "GetMeterGroupNamesByMeterID", action = "http://www.multispeak.org/Version_4.1_Release/GetMeterGroupNamesByMeterID")
    @ResponseWrapper(localName = "GetMeterGroupNamesByMeterIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterGroupNamesByMeterIDResponse")
    public org.multispeak.version_4.ArrayOfString18 getMeterGroupNamesByMeterID(
        @WebParam(name = "meterID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.MeterID meterID
    );

    /**
     * Returns the requested Customer(s) data given First and Last name.
     */
    @WebResult(name = "GetCustomerByNameResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetCustomerByName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByName")
    @WebMethod(operationName = "GetCustomerByName", action = "http://www.multispeak.org/Version_4.1_Release/GetCustomerByName")
    @ResponseWrapper(localName = "GetCustomerByNameResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetCustomerByNameResponse")
    public org.multispeak.version_4.ArrayOfCustomer getCustomerByName(
        @WebParam(name = "firstName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String firstName,
        @WebParam(name = "lastName", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastName
    );

    /**
     * This service requests of the publisher a unique registration ID that would subsequently be used to refer unambiguously to that specific subscription.  The return parameter is the registrationID, which is a string-type value.  It is recommended that the server not implement registration in such a manner that one client can guess the registrationID of another.  For instance the use of sequential numbers for registrationIDs is discouraged.
     */
    @WebResult(name = "RequestRegistrationIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "RequestRegistrationID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.RequestRegistrationID")
    @WebMethod(operationName = "RequestRegistrationID", action = "http://www.multispeak.org/Version_4.1_Release/RequestRegistrationID")
    @ResponseWrapper(localName = "RequestRegistrationIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.RequestRegistrationIDResponse")
    public java.lang.String requestRegistrationID();

    /**
     * Publisher notifies subscriber of the modified connectivity of meters after a switching event used to restore load during outage situations.  Subscriber returns status of failed tranactions in an array of errorObjects. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "MeterConnectivityNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "MeterConnectivityNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterConnectivityNotification")
    @WebMethod(operationName = "MeterConnectivityNotification", action = "http://www.multispeak.org/Version_4.1_Release/MeterConnectivityNotification")
    @ResponseWrapper(localName = "MeterConnectivityNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.MeterConnectivityNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject meterConnectivityNotification(
        @WebParam(name = "newConnectivity", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfMeterConnectivity newConnectivity
    );

    /**
     * Returns all street light data.  The calling parameter lastReceived is included so that large sets of data can be returned in manageable blocks.  lastReceived should carry an empty string the first time in a session that this method is invoked.  When multiple calls to this method are required to obtain all of the data, the lastReceived should carry in subsequent calls the objectID of the data instance noted by the server as being the lastSent. If the sessionID parameter is set in the message header, then the server shall respond as if it were being asked for a GetModifiedXXX since that sessionID; if the sessionID is not included in the method call, then all instances of the object shall be returned in response to the call.
     */
    @WebResult(name = "GetAllStreetLightsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetAllStreetLights", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllStreetLights")
    @WebMethod(operationName = "GetAllStreetLights", action = "http://www.multispeak.org/Version_4.1_Release/GetAllStreetLights")
    @ResponseWrapper(localName = "GetAllStreetLightsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetAllStreetLightsResponse")
    public org.multispeak.version_4.ArrayOfStreetLight getAllStreetLights(
        @WebParam(name = "lastReceived", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String lastReceived
    );

    /**
     * Returns the requested Service Location data given Customer ID.
     */
    @WebResult(name = "GetServiceLocationByCustomerIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetServiceLocationByCustomerID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByCustomerID")
    @WebMethod(operationName = "GetServiceLocationByCustomerID", action = "http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByCustomerID")
    @ResponseWrapper(localName = "GetServiceLocationByCustomerIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetServiceLocationByCustomerIDResponse")
    public org.multispeak.version_4.ArrayOfServiceLocation1 getServiceLocationByCustomerID(
        @WebParam(name = "customerId", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String customerId
    );

    /**
     * Returns details of the billed usage for a specific account.  This method is used by the Requester to reconcile its records with those in the CB.
     */
    @WebResult(name = "GetBilledUsageResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetBilledUsage", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetBilledUsage")
    @WebMethod(operationName = "GetBilledUsage", action = "http://www.multispeak.org/Version_4.1_Release/GetBilledUsage")
    @ResponseWrapper(localName = "GetBilledUsageResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetBilledUsageResponse")
    public org.multispeak.version_4.BilledUsage getBilledUsage(
        @WebParam(name = "accountNumber", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String accountNumber,
        @WebParam(name = "cisBillDate", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        javax.xml.datatype.XMLGregorianCalendar cisBillDate
    );

    /**
     * Returns the requested meter base data given the objectID of the meterBase.
     */
    @WebResult(name = "GetMeterBaseByObjectIDResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "GetMeterBaseByObjectID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterBaseByObjectID")
    @WebMethod(operationName = "GetMeterBaseByObjectID", action = "http://www.multispeak.org/Version_4.1_Release/GetMeterBaseByObjectID")
    @ResponseWrapper(localName = "GetMeterBaseByObjectIDResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.GetMeterBaseByObjectIDResponse")
    public org.multispeak.version_4.MeterBase getMeterBaseByObjectID(
        @WebParam(name = "meterBaseID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String meterBaseID
    );

    /**
     * MR Notifies CB of the success or failure of meter reading schedule requests by sending readingScheduleResult objects.  CB returns information about failed transactions in an array of errorObjects. The transactionID calling parameter links this Initiate request with the published data method call. The message header attribute 'registrationID' should be added to all publish messages to indicate to the subscriber under which registrationID they received this notification data.
     */
    @WebResult(name = "ReadingScheduleResultNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "ReadingScheduleResultNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ReadingScheduleResultNotification")
    @WebMethod(operationName = "ReadingScheduleResultNotification", action = "http://www.multispeak.org/Version_4.1_Release/ReadingScheduleResultNotification")
    @ResponseWrapper(localName = "ReadingScheduleResultNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.ReadingScheduleResultNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject readingScheduleResultNotification(
        @WebParam(name = "scheduleResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfReadingScheduleResult scheduleResult,
        @WebParam(name = "transactionID", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String transactionID,
        @WebParam(name = "errorString", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        java.lang.String errorString
    );

    /**
     * Requester notifies the server that significant usage has been detected on a meter that was previously placed in to usage monitoring mode using a call to the InitiateUsageMonitoring method on the Requester. Server returns information about failed transactions using an array of errorObjects.
     */
    @WebResult(name = "UsageMonitoringNotificationResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "UsageMonitoringNotification", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.UsageMonitoringNotification")
    @WebMethod(operationName = "UsageMonitoringNotification", action = "http://www.multispeak.org/Version_4.1_Release/UsageMonitoringNotification")
    @ResponseWrapper(localName = "UsageMonitoringNotificationResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.UsageMonitoringNotificationResponse")
    public org.multispeak.version_4.ArrayOfErrorObject usageMonitoringNotification(
        @WebParam(name = "meters", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfMeterID1 meters
    );

    /**
     * Requester pings URL of CB to see if it is alive. Returns errorObject(s) as necessary to communicate application status.
     */
    @WebResult(name = "PingURLResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "PingURL", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.PingURL")
    @WebMethod(operationName = "PingURL", action = "http://www.multispeak.org/Version_4.1_Release/PingURL")
    @ResponseWrapper(localName = "PingURLResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.PingURLResponse")
    public org.multispeak.version_4.ArrayOfErrorObject pingURL();

    /**
     * Publisher notifies CB that history comment(s) should be written to a customer account. CB returns failed transactions using an errorObject.
     */
    @WebResult(name = "WriteAccountHistoryCommentsResult", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
    @RequestWrapper(localName = "WriteAccountHistoryComments", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.WriteAccountHistoryComments")
    @WebMethod(operationName = "WriteAccountHistoryComments", action = "http://www.multispeak.org/Version_4.1_Release/WriteAccountHistoryComments")
    @ResponseWrapper(localName = "WriteAccountHistoryCommentsResponse", targetNamespace = "http://www.multispeak.org/Version_4.1_Release", className = "org.multispeak.version_4.WriteAccountHistoryCommentsResponse")
    public org.multispeak.version_4.ArrayOfErrorObject writeAccountHistoryComments(
        @WebParam(name = "comments", targetNamespace = "http://www.multispeak.org/Version_4.1_Release")
        org.multispeak.version_4.ArrayOfHistoryComment comments
    );
}
