
package ch.iec.tc57._2010.workrequest;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2015-05-14T11:18:38.776-04:00
 * Generated source version: 2.4.1
 * 
 */
public final class WorkRequestPort_WorkRequestPort_Client {

    private static final QName SERVICE_NAME = new QName("http://iec.ch/TC57/2010/WorkRequest", "RequestWorkRequest");

    private WorkRequestPort_WorkRequestPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = RequestWorkRequest.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        RequestWorkRequest ss = new RequestWorkRequest(wsdlURL, SERVICE_NAME);
        WorkRequestPort port = ss.getWorkRequestPort();  
        
        {
        System.out.println("Invoking deleteWorkRequest...");
        ch.iec.tc57._2010.schema.message.HeaderType _deleteWorkRequest_headerVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> _deleteWorkRequest_header = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType>(_deleteWorkRequest_headerVal);
        ch.iec.tc57._2010.schema.message.RequestType _deleteWorkRequest_request = null;
        ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType _deleteWorkRequest_payloadVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> _deleteWorkRequest_payload = new javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType>(_deleteWorkRequest_payloadVal);
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> _deleteWorkRequest_reply = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType>();
        try {
            port.deleteWorkRequest(_deleteWorkRequest_header, _deleteWorkRequest_request, _deleteWorkRequest_payload, _deleteWorkRequest_reply);

            System.out.println("deleteWorkRequest._deleteWorkRequest_header=" + _deleteWorkRequest_header.value);
            System.out.println("deleteWorkRequest._deleteWorkRequest_payload=" + _deleteWorkRequest_payload.value);
            System.out.println("deleteWorkRequest._deleteWorkRequest_reply=" + _deleteWorkRequest_reply.value);
        } catch (FaultMessage e) { 
            System.out.println("Expected exception: FaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking cancelWorkRequest...");
        ch.iec.tc57._2010.schema.message.HeaderType _cancelWorkRequest_headerVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> _cancelWorkRequest_header = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType>(_cancelWorkRequest_headerVal);
        ch.iec.tc57._2010.schema.message.RequestType _cancelWorkRequest_request = null;
        ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType _cancelWorkRequest_payloadVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> _cancelWorkRequest_payload = new javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType>(_cancelWorkRequest_payloadVal);
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> _cancelWorkRequest_reply = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType>();
        try {
            port.cancelWorkRequest(_cancelWorkRequest_header, _cancelWorkRequest_request, _cancelWorkRequest_payload, _cancelWorkRequest_reply);

            System.out.println("cancelWorkRequest._cancelWorkRequest_header=" + _cancelWorkRequest_header.value);
            System.out.println("cancelWorkRequest._cancelWorkRequest_payload=" + _cancelWorkRequest_payload.value);
            System.out.println("cancelWorkRequest._cancelWorkRequest_reply=" + _cancelWorkRequest_reply.value);
        } catch (FaultMessage e) { 
            System.out.println("Expected exception: FaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking changeWorkRequest...");
        ch.iec.tc57._2010.schema.message.HeaderType _changeWorkRequest_headerVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> _changeWorkRequest_header = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType>(_changeWorkRequest_headerVal);
        ch.iec.tc57._2010.schema.message.RequestType _changeWorkRequest_request = null;
        ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType _changeWorkRequest_payloadVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> _changeWorkRequest_payload = new javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType>(_changeWorkRequest_payloadVal);
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> _changeWorkRequest_reply = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType>();
        try {
            port.changeWorkRequest(_changeWorkRequest_header, _changeWorkRequest_request, _changeWorkRequest_payload, _changeWorkRequest_reply);

            System.out.println("changeWorkRequest._changeWorkRequest_header=" + _changeWorkRequest_header.value);
            System.out.println("changeWorkRequest._changeWorkRequest_payload=" + _changeWorkRequest_payload.value);
            System.out.println("changeWorkRequest._changeWorkRequest_reply=" + _changeWorkRequest_reply.value);
        } catch (FaultMessage e) { 
            System.out.println("Expected exception: FaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking closeWorkRequest...");
        ch.iec.tc57._2010.schema.message.HeaderType _closeWorkRequest_headerVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> _closeWorkRequest_header = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType>(_closeWorkRequest_headerVal);
        ch.iec.tc57._2010.schema.message.RequestType _closeWorkRequest_request = null;
        ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType _closeWorkRequest_payloadVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> _closeWorkRequest_payload = new javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType>(_closeWorkRequest_payloadVal);
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> _closeWorkRequest_reply = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType>();
        try {
            port.closeWorkRequest(_closeWorkRequest_header, _closeWorkRequest_request, _closeWorkRequest_payload, _closeWorkRequest_reply);

            System.out.println("closeWorkRequest._closeWorkRequest_header=" + _closeWorkRequest_header.value);
            System.out.println("closeWorkRequest._closeWorkRequest_payload=" + _closeWorkRequest_payload.value);
            System.out.println("closeWorkRequest._closeWorkRequest_reply=" + _closeWorkRequest_reply.value);
        } catch (FaultMessage e) { 
            System.out.println("Expected exception: FaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking createWorkRequest...");
        ch.iec.tc57._2010.schema.message.HeaderType _createWorkRequest_headerVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> _createWorkRequest_header = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType>(_createWorkRequest_headerVal);
        ch.iec.tc57._2010.schema.message.RequestType _createWorkRequest_request = null;
        ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType _createWorkRequest_payloadVal = null;
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> _createWorkRequest_payload = new javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType>(_createWorkRequest_payloadVal);
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> _createWorkRequest_reply = new javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType>();
        try {
            port.createWorkRequest(_createWorkRequest_header, _createWorkRequest_request, _createWorkRequest_payload, _createWorkRequest_reply);

            System.out.println("createWorkRequest._createWorkRequest_header=" + _createWorkRequest_header.value);
            System.out.println("createWorkRequest._createWorkRequest_payload=" + _createWorkRequest_payload.value);
            System.out.println("createWorkRequest._createWorkRequest_reply=" + _createWorkRequest_reply.value);
        } catch (FaultMessage e) { 
            System.out.println("Expected exception: FaultMessage has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
