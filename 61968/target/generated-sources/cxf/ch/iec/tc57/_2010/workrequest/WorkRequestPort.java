package ch.iec.tc57._2010.workrequest;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2015-07-17T11:34:02.820-04:00
 * Generated source version: 2.4.1
 * 
 */
@WebService(targetNamespace = "http://iec.ch/TC57/2010/WorkRequest", name = "WorkRequest_Port")
@XmlSeeAlso({ch.iec.tc57._2010.schema.message.ObjectFactory.class, ObjectFactory.class, ch.iec.tc57._2010.workrequestmessage.ObjectFactory.class})
public interface WorkRequestPort {

    @RequestWrapper(localName = "DeleteWorkRequest", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestRequestMessageType")
    @WebMethod(operationName = "DeleteWorkRequest", action = "http://iec.ch/TC57/2010/WorkRequest/DeleteWorkRequest")
    @ResponseWrapper(localName = "WorkRequestResponseMessage", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestResponseMessageType")
    public void deleteWorkRequest(
        @WebParam(mode = WebParam.Mode.INOUT, name = "Header", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> header,
        @WebParam(name = "Request", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        ch.iec.tc57._2010.schema.message.RequestType request,
        @WebParam(mode = WebParam.Mode.INOUT, name = "Payload", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> payload,
        @WebParam(mode = WebParam.Mode.OUT, name = "Reply", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> reply
    ) throws FaultMessage;

    @RequestWrapper(localName = "CancelWorkRequest", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestRequestMessageType")
    @WebMethod(operationName = "CancelWorkRequest", action = "http://iec.ch/TC57/2010/WorkRequest/CancelWorkRequest")
    @ResponseWrapper(localName = "WorkRequestResponseMessage", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestResponseMessageType")
    public void cancelWorkRequest(
        @WebParam(mode = WebParam.Mode.INOUT, name = "Header", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> header,
        @WebParam(name = "Request", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        ch.iec.tc57._2010.schema.message.RequestType request,
        @WebParam(mode = WebParam.Mode.INOUT, name = "Payload", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> payload,
        @WebParam(mode = WebParam.Mode.OUT, name = "Reply", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> reply
    ) throws FaultMessage;

    @RequestWrapper(localName = "ChangeWorkRequest", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestRequestMessageType")
    @WebMethod(operationName = "ChangeWorkRequest", action = "http://iec.ch/TC57/2010/WorkRequest/ChangeWorkRequest")
    @ResponseWrapper(localName = "WorkRequestResponseMessage", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestResponseMessageType")
    public void changeWorkRequest(
        @WebParam(mode = WebParam.Mode.INOUT, name = "Header", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> header,
        @WebParam(name = "Request", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        ch.iec.tc57._2010.schema.message.RequestType request,
        @WebParam(mode = WebParam.Mode.INOUT, name = "Payload", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> payload,
        @WebParam(mode = WebParam.Mode.OUT, name = "Reply", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> reply
    ) throws FaultMessage;

    @RequestWrapper(localName = "CloseWorkRequest", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestRequestMessageType")
    @WebMethod(operationName = "CloseWorkRequest", action = "http://iec.ch/TC57/2010/WorkRequest/CloseWorkRequest")
    @ResponseWrapper(localName = "WorkRequestResponseMessage", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestResponseMessageType")
    public void closeWorkRequest(
        @WebParam(mode = WebParam.Mode.INOUT, name = "Header", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> header,
        @WebParam(name = "Request", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        ch.iec.tc57._2010.schema.message.RequestType request,
        @WebParam(mode = WebParam.Mode.INOUT, name = "Payload", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> payload,
        @WebParam(mode = WebParam.Mode.OUT, name = "Reply", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> reply
    ) throws FaultMessage;

    @RequestWrapper(localName = "CreateWorkRequest", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestRequestMessageType")
    @WebMethod(operationName = "CreateWorkRequest", action = "http://iec.ch/TC57/2010/WorkRequest/CreateWorkRequest")
    @ResponseWrapper(localName = "WorkRequestResponseMessage", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage", className = "ch.iec.tc57._2010.workrequestmessage.WorkRequestResponseMessageType")
    public void createWorkRequest(
        @WebParam(mode = WebParam.Mode.INOUT, name = "Header", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.HeaderType> header,
        @WebParam(name = "Request", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        ch.iec.tc57._2010.schema.message.RequestType request,
        @WebParam(mode = WebParam.Mode.INOUT, name = "Payload", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.workrequestmessage.WorkRequestPayloadType> payload,
        @WebParam(mode = WebParam.Mode.OUT, name = "Reply", targetNamespace = "http://www.iec.ch/TC57/2010/WorkRequestMessage")
        javax.xml.ws.Holder<ch.iec.tc57._2010.schema.message.ReplyType> reply
    ) throws FaultMessage;
}
