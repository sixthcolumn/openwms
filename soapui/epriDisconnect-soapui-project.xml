<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="epriDisconnect" resourceRoot="" soapui-version="3.6.1" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="GetSend_Binding" type="wsdl" bindingName="{http://iec.ch/TC57/2011/Send}GetSend_Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/bgoodwin/workspace/epriConnect/wsdl/getSend.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/bgoodwin/workspace/epriConnect/wsdl/getSend.wsdl"><con:part><con:url>file:/Users/bgoodwin/workspace/epriConnect/wsdl/getSend.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="GetSend" targetNamespace="http://iec.ch/TC57/2011/Send" xmlns:tns="http://iec.ch/TC57/2011/Send" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsi="http://ws-i.org/schemas/conformanceClaim/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:infoMessage="http://www.iec.ch/TC57/2010/schema/message">
  <wsdl:types>
    <xs:schema targetNamespace="http://www.iec.ch/TC57/2010/schema/message" elementFormDefault="qualified">
      <xs:include schemaLocation="xsd/Message.xsd"/>
    </xs:schema>
  </wsdl:types>
  <!--Message Definitions-->
  <wsdl:message name="GetRequestMessage">
    <wsdl:part name="GetRequestMessage" element="infoMessage:RequestMessage"/>
  </wsdl:message>
  <wsdl:message name="ResponseMessage">
    <wsdl:part name="ResponseMessage" element="infoMessage:ResponseMessage"/>
  </wsdl:message>
  <wsdl:message name="FaultMessage">
    <wsdl:part name="FaultMessage" element="infoMessage:FaultMessage"/>
  </wsdl:message>
  <!--Port Definitions-->
  <wsdl:portType name="GetSend_Port">
    <wsdl:operation name="GetSend">
      <wsdl:input name="GetSendRequest" message="tns:GetRequestMessage"/>
      <wsdl:output name="GetSendResponse" message="tns:ResponseMessage"/>
      <wsdl:fault name="GetSendFault" message="tns:FaultMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="GetSend_Binding" type="tns:GetSend_Port">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetSend">
      <soap:operation soapAction="http://iec.ch/TC57/2011/GetSend/GetSend" style="document"/>
      <wsdl:input name="GetSendRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetSendResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GetSendFault">
        <soap:fault name="GetSendFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="GetSend">
    <wsdl:port name="GetSend_Port" binding="tns:GetSend_Binding">
      <soap:address location="http://iec.ch/TC57/2011/GetSend"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/Users/bgoodwin/workspace/epriConnect/wsdl/xsd/Message.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.iec.ch/TC57/2010/schema/message" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0" xmlns="http://www.iec.ch/TC57/2010/schema/message" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:complexType name="RequestType">
    <xs:annotation>
      <xs:documentation>Request type definition</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:annotation>
        <xs:documentation>Request package is typically used to supply
					parameters for 'get' requests</xs:documentation>
      </xs:annotation>
      <xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Start time of interest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>End time of interest</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Option" type="OptionType" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Request type specialization</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Object ID for request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>This can be a CIM profile defined as an XSD with
						a CIM-specific namespace</xs:documentation>
        </xs:annotation>
      </xs:any>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReplyType">
    <xs:annotation>
      <xs:documentation>Reply type definition</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:annotation>
        <xs:documentation>Reply package is used to confirm success or report
					errors</xs:documentation>
      </xs:annotation>
      <xs:element name="Result">
        <xs:annotation>
          <xs:documentation>Reply code: OK, PARTIAL or FAILED</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="OK"/>
            <xs:enumeration value="PARTIAL"/>
            <xs:enumeration value="FAILED"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Error" type="ErrorType" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Reply details describing one or more errors</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Resulting transaction ID (usually consequence of
						create)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="operationId" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The reply.operationId provides the unique
						identifier of the Operation for which this reply.result is
						relevant. Thus, it is assumed that this is a partial reply in
						direct response to one of the operations contained in an
						OperationSet request.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PayloadType">
    <xs:annotation>
      <xs:documentation>Payload container</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>For XML payloads, usually CIM profiles defined
							using an XSD in a profile-specific namespace.</xs:documentation>
          </xs:annotation>
        </xs:any>
        <xs:element name="OperationSet" type="OperationSet" minOccurs="0"/>
        <xs:element name="Compressed" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>For compressed and/or binary, uuencoded payloads</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Format" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Hint as to format of payload, e.g. XML, RDF, SVF,
						BINARY, PDF, ...</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OperationSet">
    <xs:annotation>
      <xs:documentation>Each operation set is a collection of operations
				that may require operational-integrity and/or sequence control.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="enforceMsgSequence" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>If set to TRUE, the Operation.##other messages
						must be processed in the sequence presented. If omitted, assume
						FALSE.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="enforceTransactionalIntegrity" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Set to TRUE when all of the Operation.##other
						messages must be processed successfully or else the entire message
						set must be rolled back. If omitted, assume TRUE.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Operation" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>For master data set synchronization XML payloads.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="operationId" type="xs:integer">
              <xs:annotation>
                <xs:documentation>The payload.operation.operationId provides the
									unique identifier (within the OperationSet) of the Operation
									for the purpose of reference in subsequent messages (e.g.
									OperationSet reply).</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="noun" minOccurs="0">
              <xs:annotation>
                <xs:documentation>The payload.operation.##other also identifies
									the noun, this element is optionally supplied to simplify
									processing.</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <!--insert nouns from parts 1-8 here-->
                  <!--nouns from "61958-9_MeterReadingAndControl_2ed-working-draft-20110412.docx"-->
                  <xs:enumeration value="AuxiliaryAgreementConfig"/>
                  <xs:enumeration value="ComModuleConfig"/>
                  <xs:enumeration value="CustomerAccountConfig"/>
                  <xs:enumeration value="CustomerAgreementConfig"/>
                  <xs:enumeration value="CustomerConfig"/>
                  <xs:enumeration value="CustomerMeterDataSet"/>
                  <xs:enumeration value="EndDeviceConfig"/>
                  <xs:enumeration value="EndDeviceControls"/>
                  <xs:enumeration value="EndDeviceEvents"/>
                  <xs:enumeration value="EndDeviceFirmware"/>
                  <xs:enumeration value="EndDeviceGroups"/>
                  <xs:enumeration value="MasterDataLinkageConfig"/>
                  <xs:enumeration value="MeterConfig"/>
                  <xs:enumeration value="MeterReadings"/>
                  <xs:enumeration value="MeterReadSchedule"/>
                  <xs:enumeration value="MeterServiceRequest"/>
                  <xs:enumeration value="MeterServiceRequests"/>
                  <xs:enumeration value="PricingStructureConfig"/>
                  <xs:enumeration value="ReceiptRecord"/>
                  <xs:enumeration value="ServiceCategoryConfig"/>
                  <xs:enumeration value="ServiceLocationConfig"/>
                  <xs:enumeration value="ServiceSupplierConfig"/>
                  <xs:enumeration value="TransactionRecord"/>
                  <xs:enumeration value="UsagePointConfig"/>
                  <xs:enumeration value="UsagePointGroups"/>
                  <xs:enumeration value="UsagePointLocationConfig"/>
                  <!--insert nouns parts 10-12 here"-->
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="verb" minOccurs="0">
              <xs:annotation>
                <xs:documentation>"create", "delete", "change", etc.</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="cancel"/>
                  <xs:enumeration value="canceled"/>
                  <xs:enumeration value="change"/>
                  <xs:enumeration value="changed"/>
                  <xs:enumeration value="create"/>
                  <xs:enumeration value="created"/>
                  <xs:enumeration value="close"/>
                  <xs:enumeration value="closed"/>
                  <xs:enumeration value="delete"/>
                  <xs:enumeration value="deleted"/>
                  <xs:enumeration value="get"/>
                  <xs:enumeration value="show"/>
                  <xs:enumeration value="reply"/>
                  <xs:enumeration value="subscribe"/>
                  <xs:enumeration value="unsubscribe"/>
                  <xs:enumeration value="execute"/>
                  <xs:enumeration value="report"/>
                  <xs:enumeration value="stop"/>
                  <xs:enumeration value="terminate"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="elementOperation" type="xs:boolean" default="false" minOccurs="0">
              <xs:annotation>
                <xs:documentation>TRUE if the verb is operating at the element
									level. In such a case, the verb is to be applied to the
									elements populated in the payload.operation.##other below. If
									omitted, assume FALSE.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:any namespace="##other" processContents="skip" minOccurs="0">
              <xs:annotation>
                <xs:documentation>An XML payload which carries a CIM profile
									defined using an XSD in a profile-specific namespate.
									Individual payloads are used collectively to create a series of
									related operations. See the "enforce" boolean flags in the
									header for instructions on how to process these messages.</xs:documentation>
              </xs:annotation>
            </xs:any>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReplayDetectionType">
    <xs:annotation>
      <xs:documentation>Used to detect and prevent replay attacks</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Nonce" type="xs:string"/>
      <xs:element name="Created" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UserType">
    <xs:annotation>
      <xs:documentation>User type definition</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="UserID" type="xs:string">
        <xs:annotation>
          <xs:documentation>User identifier</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Organization" type="xs:string">
        <xs:annotation>
          <xs:documentation>User parent organization identifier</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="HeaderType">
    <xs:annotation>
      <xs:documentation>Message header type definition</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:annotation>
        <xs:documentation>Message header contains control and descriptive
					information about the message.</xs:documentation>
      </xs:annotation>
      <xs:element name="Verb">
        <xs:annotation>
          <xs:documentation>This enumerated list of verbs that can be used to
						form message types in compliance with the IEC 61968 standard.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="cancel"/>
            <xs:enumeration value="canceled"/>
            <xs:enumeration value="change"/>
            <xs:enumeration value="changed"/>
            <xs:enumeration value="create"/>
            <xs:enumeration value="created"/>
            <xs:enumeration value="close"/>
            <xs:enumeration value="closed"/>
            <xs:enumeration value="delete"/>
            <xs:enumeration value="deleted"/>
            <xs:enumeration value="get"/>
            <xs:enumeration value="show"/>
            <xs:enumeration value="reply"/>
            <xs:enumeration value="subscribe"/>
            <xs:enumeration value="unsubscribe"/>
            <xs:enumeration value="execute"/>
            <xs:enumeration value="report"/>
            <xs:enumeration value="stop"/>
            <xs:enumeration value="terminate"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Noun">
        <xs:annotation>
          <xs:documentation>The Noun of the Control Area identifies the main
						subject of the message type, typically a real world object defined
						in the CIM.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <!--insert nouns from parts 1-8 here-->
            <!--nouns from "61958-9_MeterReadingAndControl_2ed-working-draft-20110412.docx"-->
            <xs:enumeration value="AuxiliaryAgreementConfig"/>
            <xs:enumeration value="ComModuleConfig"/>
            <xs:enumeration value="CustomerAccountConfig"/>
            <xs:enumeration value="CustomerAgreementConfig"/>
            <xs:enumeration value="CustomerConfig"/>
            <xs:enumeration value="CustomerMeterDataSet"/>
            <xs:enumeration value="EndDeviceConfig"/>
            <xs:enumeration value="EndDeviceControls"/>
            <xs:enumeration value="EndDeviceEvents"/>
            <xs:enumeration value="EndDeviceFirmware"/>
            <xs:enumeration value="EndDeviceGroups"/>
            <xs:enumeration value="MasterDataLinkageConfig"/>
            <xs:enumeration value="MeterConfig"/>
            <xs:enumeration value="MeterReadings"/>
            <xs:enumeration value="MeterReadSchedule"/>
            <xs:enumeration value="MeterServiceRequest"/>
            <xs:enumeration value="MeterServiceRequests"/>
            <xs:enumeration value="PricingStructureConfig"/>
            <xs:enumeration value="ReceiptRecord"/>
            <xs:enumeration value="ServiceCategoryConfig"/>
            <xs:enumeration value="ServiceLocationConfig"/>
            <xs:enumeration value="ServiceSupplierConfig"/>
            <xs:enumeration value="TransactionRecord"/>
            <xs:enumeration value="UsagePointConfig"/>
            <xs:enumeration value="UsagePointGroups"/>
            <xs:enumeration value="UsagePointLocationConfig"/>
            <!--insert nouns parts 10-12 here"-->
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Revision" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Revision level of the message type.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReplayDetection" type="ReplayDetectionType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Use to introduce randomness in the message to
						enhance effectiveness of encryption</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Context" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Intended context for information usage, e.g.
						PRODUCTION, TESTING, TRAINING, ...</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="PRODUCTION"/>
            <xs:enumeration value="TESTING"/>
            <xs:enumeration value="DEVELOPMENT"/>
            <xs:enumeration value="STUDY"/>
            <xs:enumeration value="TRAINING"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Application level relevant time and date for when
						this instance of the message type was produced. This is not
						intended to be used by middleware for message management.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Source" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Source system or application that sends the
						message</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AsyncReplyFlag" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not reply should be
						asynchronous</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReplyAddress" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Address to be used for asynchronous replies,
						typically a URL/topic/queue.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="AckRequired" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Indicates whether or not an acknowledgement is
						required</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="User" type="UserType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>User information of the sender</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MessageID" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Unique message ID to be used for tracking
						messages</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CorrelationID" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>ID to be used by applications for correlating
						replies</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Comment" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional comment</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Property" type="MessageProperty" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Message properties can be used to identify
						information needed for extended routing and filtering capabilities</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Message" type="MessageType">
    <xs:annotation>
      <xs:documentation>Common IEC 61968 Message Definition</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="MessageProperty">
    <xs:annotation>
      <xs:documentation>Message properties can be used for extended routing
				and filtering</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RequestMessage" type="RequestMessageType">
    <xs:annotation>
      <xs:documentation>Request message structure</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="ResponseMessage" type="ResponseMessageType">
    <xs:annotation>
      <xs:documentation>Response message structure</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="EventMessage" type="EventMessageType">
    <xs:annotation>
      <xs:documentation>Event message structure</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="MessageType">
    <xs:annotation>
      <xs:documentation>Generic Message Type</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="HeaderType"/>
      <xs:element name="Request" type="RequestType" minOccurs="0"/>
      <xs:element name="Reply" type="ReplyType" minOccurs="0"/>
      <xs:element name="Payload" type="PayloadType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RequestMessageType">
    <xs:annotation>
      <xs:documentation>Request Message Type, which will typically result
				in a ResponseMessage to be returned. This isn typically used to
				initiate a transaction or a query request.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="HeaderType"/>
      <xs:element name="Request" type="RequestType" minOccurs="0"/>
      <xs:element name="Payload" type="PayloadType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseMessageType">
    <xs:annotation>
      <xs:documentation>Response MessageType, typically used to reply to a
				RequestMessage</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="HeaderType"/>
      <xs:element name="Reply" type="ReplyType"/>
      <xs:element name="Payload" type="PayloadType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FaultMessageType">
    <xs:annotation>
      <xs:documentation>Fault Messsage Type, which is used in cases where
				the incoming message (including the header) can not be parsed</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="EventMessageType">
    <xs:annotation>
      <xs:documentation>Event Message Type, which is used to indicate a
				condition of potential interest.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Header" type="HeaderType"/>
      <xs:element name="Payload" type="PayloadType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorType">
    <xs:annotation>
      <xs:documentation>Error Structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Application defined error code</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="level" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Severity level, e.g. INFORMATIVE, WARNING, FATAL,
						CATASTROPHIC</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="INFORM"/>
            <xs:enumeration value="WARNING"/>
            <xs:enumeration value="FATAL"/>
            <xs:enumeration value="CATASTROPHIC"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="reason" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Description of the error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="details" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Free form detailed text description of error</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="xpath" type="xs:QName" minOccurs="0">
        <xs:annotation>
          <xs:documentation>XPath expression to identify specific XML element</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="stackTrace" type="xs:string" minOccurs="0"/>
      <xs:element name="Location" type="LocationType" minOccurs="0"/>
      <xs:element name="object" type="IdentifiedObject" minOccurs="0"/>
      <xs:element name="operationId" type="xs:integer" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The reply.operationId provides the unique
						identifier of the Operation for which this reply.result.error is
						relevant. Thus, it is assumed that this is an error from one of
						the operations contained in an OperationSet request.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OptionType">
    <xs:annotation>
      <xs:documentation>Request options</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LocationType">
    <xs:annotation>
      <xs:documentation>Process location where error was encountered</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="node" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Name of the pipeline/branch/route node where
						error occurred</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pipeline" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Name of the pipeline where error occurred (if
						applicable)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="stage" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Name of the stage where error occurred (if
						applicable)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IdentifiedObject">
    <xs:annotation>
      <xs:documentation>From CIM</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="mRID" minOccurs="0"/>
      <xs:element name="Name" type="Name" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="objectType" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>CIM class name that classiifies the identified
						object</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NameType">
    <xs:annotation>
      <xs:documentation>From CIM</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name"/>
      <xs:element name="description" minOccurs="0"/>
      <xs:element name="NameTypeAuthority" type="NameTypeAuthority" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Name">
    <xs:annotation>
      <xs:documentation>From CIM</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name"/>
      <xs:element name="NameType" type="NameType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NameTypeAuthority">
    <xs:annotation>
      <xs:documentation>From CIM</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name"/>
      <xs:element name="description" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="FaultMessage" type="FaultMessageType"/>
  <xs:element name="adverbTypes">
    <xs:simpleType>
      <xs:restriction base="xs:string"/>
    </xs:simpleType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://iec.ch/TC57/2011/GetSend</con:endpoint><con:endpoint>http://localhost:8080/epriConnect/connectService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://iec.ch/TC57/2011/GetSend/GetSend" name="GetSend" bindingOperationName="GetSend" type="Request-Response" outputName="GetSendResponse" inputName="GetSendRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://iec.ch/TC57/2011/GetSend</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://www.iec.ch/TC57/2010/schema/message">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:RequestMessage>
         <mes:Header>
            <mes:Verb>?</mes:Verb>
            <mes:Noun>?</mes:Noun>
            <!--Optional:-->
            <mes:Revision>?</mes:Revision>
            <!--Optional:-->
            <mes:ReplayDetection>
               <mes:Nonce>?</mes:Nonce>
               <mes:Created>?</mes:Created>
            </mes:ReplayDetection>
            <!--Optional:-->
            <mes:Context>?</mes:Context>
            <!--Optional:-->
            <mes:Timestamp>?</mes:Timestamp>
            <!--Optional:-->
            <mes:Source>?</mes:Source>
            <!--Optional:-->
            <mes:AsyncReplyFlag>?</mes:AsyncReplyFlag>
            <!--Optional:-->
            <mes:ReplyAddress>?</mes:ReplyAddress>
            <!--Optional:-->
            <mes:AckRequired>?</mes:AckRequired>
            <!--Optional:-->
            <mes:User>
               <mes:UserID>?</mes:UserID>
               <mes:Organization>?</mes:Organization>
            </mes:User>
            <!--Optional:-->
            <mes:MessageID>?</mes:MessageID>
            <!--Optional:-->
            <mes:CorrelationID>?</mes:CorrelationID>
            <!--Optional:-->
            <mes:Comment>?</mes:Comment>
            <!--Zero or more repetitions:-->
            <mes:Property>
               <mes:Name>?</mes:Name>
               <!--Optional:-->
               <mes:Value>?</mes:Value>
            </mes:Property>
            <!--You may enter ANY elements at this point-->
         </mes:Header>
         <!--Optional:-->
         <mes:Request>
            <!--Optional:-->
            <mes:StartTime>?</mes:StartTime>
            <!--Optional:-->
            <mes:EndTime>?</mes:EndTime>
            <!--Zero or more repetitions:-->
            <mes:Option>
               <mes:name>?</mes:name>
               <!--Optional:-->
               <mes:value>?</mes:value>
            </mes:Option>
            <!--Zero or more repetitions:-->
            <mes:ID>?</mes:ID>
            <!--You may enter ANY elements at this point-->
         </mes:Request>
         <!--Optional:-->
         <mes:Payload>
            <!--You have a CHOICE of the next 3 items at this level-->
            <!--You may enter ANY elements at this point-->
            <!--Optional:-->
            <mes:OperationSet>
               <!--Optional:-->
               <mes:enforceMsgSequence>?</mes:enforceMsgSequence>
               <!--Optional:-->
               <mes:enforceTransactionalIntegrity>?</mes:enforceTransactionalIntegrity>
               <!--Zero or more repetitions:-->
               <mes:Operation>
                  <mes:operationId>?</mes:operationId>
                  <!--Optional:-->
                  <mes:noun>?</mes:noun>
                  <!--Optional:-->
                  <mes:verb>?</mes:verb>
                  <!--Optional:-->
                  <mes:elementOperation>false</mes:elementOperation>
                  <!--You may enter ANY elements at this point-->
               </mes:Operation>
            </mes:OperationSet>
            <!--Optional:-->
            <mes:Compressed>?</mes:Compressed>
            <!--Optional:-->
            <mes:Format>?</mes:Format>
         </mes:Payload>
      </mes:RequestMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://iec.ch/TC57/2011/GetSend/GetSend"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite name="GetSend_Binding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 2" searchProperties="true" id="04b78d96-4242-4bf0-9bce-0662ce821987"><con:settings/><con:testStep type="request" name="Test Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GetSend_Binding</con:interface><con:operation>GetSend</con:operation><con:request name="Test Request"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/epriConnect/connectService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://www.iec.ch/TC57/2010/schema/message">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:RequestMessage>
         <mes:Header>
            <mes:Verb>?</mes:Verb>
            <mes:Noun>?</mes:Noun>
         </mes:Header>
      </mes:RequestMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest name="LoadTest 3"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 3" searchProperties="true"><con:settings/><con:testStep type="request" name="Test Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GetSend_Binding</con:interface><con:operation>GetSend</con:operation><con:request name="Test Request"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://iec.ch/TC57/2011/GetSend</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mes="http://www.iec.ch/TC57/2010/schema/message">
   <soapenv:Header/>
   <soapenv:Body>
      <mes:RequestMessage>
         <mes:Header>
            <mes:Verb>?</mes:Verb>
            <mes:Noun>?</mes:Noun>
            <!--Optional:-->
            <mes:Revision>?</mes:Revision>
            <!--Optional:-->
            <mes:ReplayDetection>
               <mes:Nonce>?</mes:Nonce>
               <mes:Created>?</mes:Created>
            </mes:ReplayDetection>
            <!--Optional:-->
            <mes:Context>?</mes:Context>
            <!--Optional:-->
            <mes:Timestamp>?</mes:Timestamp>
            <!--Optional:-->
            <mes:Source>?</mes:Source>
            <!--Optional:-->
            <mes:AsyncReplyFlag>?</mes:AsyncReplyFlag>
            <!--Optional:-->
            <mes:ReplyAddress>?</mes:ReplyAddress>
            <!--Optional:-->
            <mes:AckRequired>?</mes:AckRequired>
            <!--Optional:-->
            <mes:User>
               <mes:UserID>?</mes:UserID>
               <mes:Organization>?</mes:Organization>
            </mes:User>
            <!--Optional:-->
            <mes:MessageID>?</mes:MessageID>
            <!--Optional:-->
            <mes:CorrelationID>?</mes:CorrelationID>
            <!--Optional:-->
            <mes:Comment>?</mes:Comment>
            <!--Zero or more repetitions:-->
            <mes:Property>
               <mes:Name>?</mes:Name>
               <!--Optional:-->
               <mes:Value>?</mes:Value>
            </mes:Property>
            <!--You may enter ANY elements at this point-->
         </mes:Header>
         <!--Optional:-->
         <mes:Request>
            <!--Optional:-->
            <mes:StartTime>?</mes:StartTime>
            <!--Optional:-->
            <mes:EndTime>?</mes:EndTime>
            <!--Zero or more repetitions:-->
            <mes:Option>
               <mes:name>?</mes:name>
               <!--Optional:-->
               <mes:value>?</mes:value>
            </mes:Option>
            <!--Zero or more repetitions:-->
            <mes:ID>?</mes:ID>
            <!--You may enter ANY elements at this point-->
         </mes:Request>
         <!--Optional:-->
         <mes:Payload>
            <!--You have a CHOICE of the next 3 items at this level-->
            <!--You may enter ANY elements at this point-->
            <!--Optional:-->
            <mes:OperationSet>
               <!--Optional:-->
               <mes:enforceMsgSequence>?</mes:enforceMsgSequence>
               <!--Optional:-->
               <mes:enforceTransactionalIntegrity>?</mes:enforceTransactionalIntegrity>
               <!--Zero or more repetitions:-->
               <mes:Operation>
                  <mes:operationId>?</mes:operationId>
                  <!--Optional:-->
                  <mes:noun>?</mes:noun>
                  <!--Optional:-->
                  <mes:verb>?</mes:verb>
                  <!--Optional:-->
                  <mes:elementOperation>false</mes:elementOperation>
                  <!--You may enter ANY elements at this point-->
               </mes:Operation>
            </mes:OperationSet>
            <!--Optional:-->
            <mes:Compressed>?</mes:Compressed>
            <!--Optional:-->
            <mes:Format>?</mes:Format>
         </mes:Payload>
      </mes:RequestMessage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/></con:soapui-project>